{"version":3,"sources":["csvparse/papaparse.js","reportWebVitals.js","components/SelectorCuatrimestre.js","components/SelectorMateria.js","csvparse/CsvParser.js","csvparse/CsvParserPrePandemia.js","csvparse/CsvParser20201C.js","csvparse/CsvParser20202C.js","components/RespuestasEncuestaHeaderCelda.js","components/RespuestasEncuestaHeader.js","components/RespuestasEncuestaCeldaTextoLargo.js","components/RespuestasEncuestaCeldaPuntaje.js","components/RespuestasEncuestaCelda.js","components/RespuestasEncuestaFilaDatos.js","components/RespuestasEncuestaCeldaAcumulados.js","components/RespuestasEncuestaFilaAcumulados.js","components/RespuestasEncuestaFilas.js","components/RespuestasEncuesta.js","components/RespuestasPopupTextoLargo.js","services/EncuestasDeMateria.js","components/Encuestas.js","csvparse/GetCsvParser.js","index.js"],"names":["define","moduleFactory","global","self","window","getWorkerBlob","URL","webkitURL","code","toString","Papa","BLOB_URL","createObjectURL","Blob","type","IS_WORKER","document","postMessage","IS_PAPA_WORKER","test","location","protocol","workers","workerIdCounter","parse","CsvToJson","unparse","JsonToCsv","RECORD_SEP","String","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","BAD_DELIMITERS","WORKERS_SUPPORTED","Worker","NODE_STREAM_INPUT","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","PAPA_BROWSER_CONTEXT","DuplexStreamStreamer","jQuery","$","fn","options","config","queue","this","each","idx","prop","toUpperCase","attr","toLowerCase","FileReader","files","length","i","push","file","inputElem","instanceConfig","extend","parseNextFile","f","isFunction","before","returned","action","error","reason","fileComplete","userCompleteFunc","complete","results","name","elem","splice","_input","_config","dynamicTyping","dynamicTypingFunction","transform","worker","w","newWorker","userStep","step","userChunk","chunk","userComplete","userError","input","workerId","id","streamer","getStream","download","readable","read","on","File","Object","stream","_quotes","_writeHeader","_delimiter","_newline","_quoteChar","_escapedQuote","_skipEmptyLines","_columns","_escapeFormulae","unpackConfig","quoteCharRegex","RegExp","escapeRegExp","JSON","Array","isArray","serialize","objectKeys","data","fields","meta","Error","delimiter","filter","value","indexOf","quotes","skipEmptyLines","newline","quoteChar","header","columns","undefined","escapeChar","escapeFormulae","obj","keys","key","csv","hasHeader","dataKeyedByField","safe","row","maxCol","emptyLine","nullLine","join","trim","line","c","cx","col","colIdx","str","constructor","Date","stringify","slice","match","escapedQuoteStr","replace","hasAny","charAt","substrings","ChunkStreamer","replaceConfig","configCopy","copy","chunkSize","parseInt","_handle","_finished","_completed","_halted","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","call","parseChunk","isFakeChunk","beforeFirstChunk","modifiedChunk","aggregate","paused","aborted","lastIndex","cursor","substring","finishedIncludingPreview","preview","WORKER_ID","finished","concat","_sendError","xhr","getFileSize","contentRange","getResponseHeader","lastIndexOf","_readChunk","_chunkLoaded","url","XMLHttpRequest","withCredentials","onload","bindFunction","onerror","_chunkError","open","downloadRequestBody","downloadRequestHeaders","headers","headerName","setRequestHeader","end","send","err","message","status","readyState","responseText","errorMessage","errorText","statusText","reader","usingAsyncReader","webkitSlice","mozSlice","FileReaderSync","Math","min","size","txt","readAsText","encoding","target","result","event","remaining","s","parseOnData","streamHasEnded","pause","prototype","apply","arguments","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","shift","_streamCleanUp","removeListener","Duplex","require","parseOnWrite","writeStreamHasFinished","parseCallbackQueue","_onCsvData","_onCsvComplete","_addToParseQueue","callback","_onRead","_onWrite","_onWriteComplete","readableObjectMode","decodeStrings","write","once","_parser","_delimiterError","MAX_FLOAT","pow","MIN_FLOAT","FLOAT","ISO_DATE","_stepCounter","_rowCounter","_paused","_aborted","_fields","_results","needsHeaderRow","processResults","abort","testEmptyLine","testFloat","floatValue","parseFloat","addError","fillHeaderFields","applyHeaderAndDynamicTypingAndTransformation","forEach","addHeader","transformHeader","shouldApplyDynamicTyping","field","parseDynamic","processRow","rowSource","j","incrementBy","map","guessDelimiter","comments","delimitersToGuess","bestDelim","bestDelta","fieldCountPrevRow","maxFieldCount","delim","delta","avgFieldCount","emptyLinesCount","fieldCount","abs","successful","bestDelimiter","guessLineEndings","re","r","split","n","nAppearsFirst","numWithN","msg","baseIndex","ignoreLastRow","delimGuess","parserConfig","getCharIndex","setTimeout","string","fastMode","inputLen","delimLen","newlineLen","commentsLen","stepIsFunction","lastCursor","returnable","rows","pushRow","doStep","nextDelim","nextNewline","quoteSearch","nextDelimObj","getNextUnquotedDelimiter","saveRow","index","finish","spacesBetweenQuoteAndDelimiter","extraSpaces","spacesBetweenQuoteAndNewLine","spaceLength","textBetweenClosingQuoteAndIndex","newCursor","stopped","linebreak","truncated","newLine","nextQuoteSearch","nextNextDelim","workerUrl","onmessage","mainThreadReceivedMessage","e","handle","completeWorker","notImplemented","terminate","workerThreadReceivedMessage","cpy","func","create","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SelectorCuatrimestre","cuatrimestres","cuatrimestreSeleccionado","materiaSeleccionada","history","useHistory","className","onChange","materiaARedireccionar","encodeURIComponent","cuat","nombre","SelectorMateria","materias","mat","TEXTOANUM","CsvParser","cursoEnCSV","materiaCompleta","console","log","docente","pop","curso","posibleCurso","isNaN","texto","clave","retObj","textoANum","lineaCsv","datosEncuestas","h","mapLines","Set","item","materia","sort","CsvParserPrePandeima","bind","title","shortTitle","numeric","centered","longText","obtenerMateriaCursoYDocente","textoYDescripcion","CsvParser20201C","CsvParser20202C","armarDatosCursadaVirtual","teo","pra","tp","cons","tiempos","altura","pos","neg","hacervirtual","actual","titulo","ret","acumularDatosConSeparador","RespuestasEncuestaHeaderCelda","tituloCorto","RespuestasEncuestaHeader","columnas","datoCol","RespuestasEncuestaCeldaTextoLargo","valor","handleLongTextChange","useContext","Context","data-toggle","data-target","onClick","RespuestasEncuestaCeldaPuntaje","valorNum","tdClassName","RespuestasEncuestaCelda","datos","RespuestasEncuestaFilaDatos","RespuestasEncuestaCeldaAcumulados","toFixed","RespuestasEncuestaFilaAcumulados","RespuestasEncuestaFilas","filas","acumuladosPorDocente","filasAMostrar","RespuestasEncuesta","RespuestasPopupTextoLargo","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","generarAcumulados","datosColumnas","columnasNumericas","dc","docentes","de","promediosDeDocente","acumulados","cn","columna","count","sum","acumularPuntaje","generarAcumuladosDeDocente","promedios","k","generarPromedios","React","createContext","Encuestas","useParams","cuatrimestreURL","cuatrimestre","materiaURL","decodeURIComponent","useState","setCuatrimestres","setMaterias","setDatosEncuestas","columnasDatosEncuestas","setColumnasDatosEncuestas","encuestasDeMateria","datosEncuestasDeMateria","setDatosEncuestasDeMateria","textoLargo","setTextoLargo","tituloTextoLargo","setTituloTextoLargo","useEffect","axios","get","res","datosCuatSel","find","parser","parsear","obtenerColumnas","a","b","localeCompare","EncuestasDeMateria","Provider","ReactDOM","render","StrictMode","path","getElementById"],"mappings":"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","file":"static/js/main.372d0cae.chunk.js","sourcesContent":["/* @license\r\nPapa Parse\r\nv5.2.0\r\nhttps://github.com/mholt/PapaParse\r\nLicense: MIT\r\n*/\r\n\r\n(function(root, factory)\r\n{\r\n\t/* globals define */\r\n\tif (typeof define === 'function' && define.amd)\r\n\t{\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine([], factory);\r\n\t}\r\n\telse if (typeof module === 'object' && typeof exports !== 'undefined')\r\n\t{\r\n\t\t// Node. Does not work with strict CommonJS, but\r\n\t\t// only CommonJS-like environments that support module.exports,\r\n\t\t// like Node.\r\n\t\tmodule.exports = factory();\r\n\t}\r\n\telse\r\n\t{\r\n\t\t// Browser globals (root is window)\r\n\t\troot.Papa = factory();\r\n\t}\r\n\t// in strict mode we cannot access arguments.callee, so we need a named reference to\r\n\t// stringify the factory method for the blob worker\r\n}(this, function moduleFactory()\r\n{\r\n\t\r\n\r\n\tvar global = (function() {\r\n\t\t// alternative method, similar to `Function('return this')()`\r\n\t\t// but without using `eval` (which is disabled when\r\n\t\t// using Content Security Policy).\r\n\r\n\t\t// eslint-disable-next-line no-restricted-globals\r\n\t\tif (typeof self !== 'undefined') { return self; }\r\n\t\tif (typeof window !== 'undefined') { return window; }\r\n\t\tif (typeof global !== 'undefined') { return global; }\r\n\r\n\t\t// When running tests none of the above have been defined\r\n\t\treturn {};\r\n\t})();\r\n\r\n\r\n\tfunction getWorkerBlob() {\r\n\t\tvar URL = global.URL || global.webkitURL || null;\r\n\t\tvar code = moduleFactory.toString();\r\n\t\treturn Papa.BLOB_URL || (Papa.BLOB_URL = URL.createObjectURL(new Blob(['(', code, ')();'], {type: 'text/javascript'})));\r\n\t}\r\n\r\n\tvar IS_WORKER = !global.document && !!global.postMessage,\r\n\t\tIS_PAPA_WORKER = IS_WORKER && /blob:/i.test((global.location || {}).protocol);\r\n\tvar workers = {}, workerIdCounter = 0;\r\n\r\n\tvar Papa = {};\r\n\r\n\tPapa.parse = CsvToJson;\r\n\tPapa.unparse = JsonToCsv;\r\n\r\n\tPapa.RECORD_SEP = String.fromCharCode(30);\r\n\tPapa.UNIT_SEP = String.fromCharCode(31);\r\n\tPapa.BYTE_ORDER_MARK = '\\ufeff';\r\n\tPapa.BAD_DELIMITERS = ['\\r', '\\n', '\"', Papa.BYTE_ORDER_MARK];\r\n\tPapa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;\r\n\tPapa.NODE_STREAM_INPUT = 1;\r\n\r\n\t// Configurable chunk sizes for local and remote files, respectively\r\n\tPapa.LocalChunkSize = 1024 * 1024 * 10;\t// 10 MB\r\n\tPapa.RemoteChunkSize = 1024 * 1024 * 5;\t// 5 MB\r\n\tPapa.DefaultDelimiter = ',';\t\t\t// Used if not specified and detection fails\r\n\r\n\t// Exposed for testing and development only\r\n\tPapa.Parser = Parser;\r\n\tPapa.ParserHandle = ParserHandle;\r\n\tPapa.NetworkStreamer = NetworkStreamer;\r\n\tPapa.FileStreamer = FileStreamer;\r\n\tPapa.StringStreamer = StringStreamer;\r\n\tPapa.ReadableStreamStreamer = ReadableStreamStreamer;\r\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\r\n\t\tPapa.DuplexStreamStreamer = DuplexStreamStreamer;\r\n\t}\r\n\r\n\tif (global.jQuery)\r\n\t{\r\n\t\tvar $ = global.jQuery;\r\n\t\t$.fn.parse = function(options)\r\n\t\t{\r\n\t\t\tvar config = options.config || {};\r\n\t\t\tvar queue = [];\r\n\r\n\t\t\tthis.each(function(idx)\r\n\t\t\t{\r\n\t\t\t\tvar supported = $(this).prop('tagName').toUpperCase() === 'INPUT'\r\n\t\t\t\t\t\t\t\t&& $(this).attr('type').toLowerCase() === 'file'\r\n\t\t\t\t\t\t\t\t&& global.FileReader;\r\n\r\n\t\t\t\tif (!supported || !this.files || this.files.length === 0)\r\n\t\t\t\t\treturn true;\t// continue to next input element\r\n\r\n\t\t\t\tfor (var i = 0; i < this.files.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tqueue.push({\r\n\t\t\t\t\t\tfile: this.files[i],\r\n\t\t\t\t\t\tinputElem: this,\r\n\t\t\t\t\t\tinstanceConfig: $.extend({}, config)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tparseNextFile();\t// begin parsing\r\n\t\t\treturn this;\t\t// maintains chainability\r\n\r\n\r\n\t\t\tfunction parseNextFile()\r\n\t\t\t{\r\n\t\t\t\tif (queue.length === 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (isFunction(options.complete))\r\n\t\t\t\t\t\toptions.complete();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar f = queue[0];\r\n\r\n\t\t\t\tif (isFunction(options.before))\r\n\t\t\t\t{\r\n\t\t\t\t\tvar returned = options.before(f.file, f.inputElem);\r\n\r\n\t\t\t\t\tif (typeof returned === 'object')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (returned.action === 'abort')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\terror('AbortError', f.file, f.inputElem, returned.reason);\r\n\t\t\t\t\t\t\treturn;\t// Aborts all queued files immediately\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (returned.action === 'skip')\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (typeof returned.config === 'object')\r\n\t\t\t\t\t\t\tf.instanceConfig = $.extend(f.instanceConfig, returned.config);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (returned === 'skip')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfileComplete();\t// parse the next file in the queue, if any\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Wrap up the user's complete callback, if any, so that ours also gets executed\r\n\t\t\t\tvar userCompleteFunc = f.instanceConfig.complete;\r\n\t\t\t\tf.instanceConfig.complete = function(results)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (isFunction(userCompleteFunc))\r\n\t\t\t\t\t\tuserCompleteFunc(results, f.file, f.inputElem);\r\n\t\t\t\t\tfileComplete();\r\n\t\t\t\t};\r\n\r\n\t\t\t\tPapa.parse(f.file, f.instanceConfig);\r\n\t\t\t}\r\n\r\n\t\t\tfunction error(name, file, elem, reason)\r\n\t\t\t{\r\n\t\t\t\tif (isFunction(options.error))\r\n\t\t\t\t\toptions.error({name: name}, file, elem, reason);\r\n\t\t\t}\r\n\r\n\t\t\tfunction fileComplete()\r\n\t\t\t{\r\n\t\t\t\tqueue.splice(0, 1);\r\n\t\t\t\tparseNextFile();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tif (IS_PAPA_WORKER)\r\n\t{\r\n\t\tglobal.onmessage = workerThreadReceivedMessage;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tfunction CsvToJson(_input, _config)\r\n\t{\r\n\t\t_config = _config || {};\r\n\t\tvar dynamicTyping = _config.dynamicTyping || false;\r\n\t\tif (isFunction(dynamicTyping)) {\r\n\t\t\t_config.dynamicTypingFunction = dynamicTyping;\r\n\t\t\t// Will be filled on first row call\r\n\t\t\tdynamicTyping = {};\r\n\t\t}\r\n\t\t_config.dynamicTyping = dynamicTyping;\r\n\r\n\t\t_config.transform = isFunction(_config.transform) ? _config.transform : false;\r\n\r\n\t\tif (_config.worker && Papa.WORKERS_SUPPORTED)\r\n\t\t{\r\n\t\t\tvar w = newWorker();\r\n\r\n\t\t\tw.userStep = _config.step;\r\n\t\t\tw.userChunk = _config.chunk;\r\n\t\t\tw.userComplete = _config.complete;\r\n\t\t\tw.userError = _config.error;\r\n\r\n\t\t\t_config.step = isFunction(_config.step);\r\n\t\t\t_config.chunk = isFunction(_config.chunk);\r\n\t\t\t_config.complete = isFunction(_config.complete);\r\n\t\t\t_config.error = isFunction(_config.error);\r\n\t\t\tdelete _config.worker;\t// prevent infinite loop\r\n\r\n\t\t\tw.postMessage({\r\n\t\t\t\tinput: _input,\r\n\t\t\t\tconfig: _config,\r\n\t\t\t\tworkerId: w.id\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar streamer = null;\r\n\t\tif (_input === Papa.NODE_STREAM_INPUT && typeof PAPA_BROWSER_CONTEXT === 'undefined')\r\n\t\t{\r\n\t\t\t// create a node Duplex stream for use\r\n\t\t\t// with .pipe\r\n\t\t\tstreamer = new DuplexStreamStreamer(_config);\r\n\t\t\treturn streamer.getStream();\r\n\t\t}\r\n\t\telse if (typeof _input === 'string')\r\n\t\t{\r\n\t\t\tif (_config.download)\r\n\t\t\t\tstreamer = new NetworkStreamer(_config);\r\n\t\t\telse\r\n\t\t\t\tstreamer = new StringStreamer(_config);\r\n\t\t}\r\n\t\telse if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))\r\n\t\t{\r\n\t\t\tstreamer = new ReadableStreamStreamer(_config);\r\n\t\t}\r\n\t\telse if ((global.File && _input instanceof File) || _input instanceof Object)\t// ...Safari. (see issue #106)\r\n\t\t\tstreamer = new FileStreamer(_config);\r\n\r\n\t\treturn streamer.stream(_input);\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tfunction JsonToCsv(_input, _config)\r\n\t{\r\n\t\t// Default configuration\r\n\r\n\t\t/** whether to surround every datum with quotes */\r\n\t\tvar _quotes = false;\r\n\r\n\t\t/** whether to write headers */\r\n\t\tvar _writeHeader = true;\r\n\r\n\t\t/** delimiting character(s) */\r\n\t\tvar _delimiter = ',';\r\n\r\n\t\t/** newline character(s) */\r\n\t\tvar _newline = '\\r\\n';\r\n\r\n\t\t/** quote character */\r\n\t\tvar _quoteChar = '\"';\r\n\r\n\t\t/** escaped quote character, either \"\" or <config.escapeChar>\" */\r\n\t\tvar _escapedQuote = _quoteChar + _quoteChar;\r\n\r\n\t\t/** whether to skip empty lines */\r\n\t\tvar _skipEmptyLines = false;\r\n\r\n\t\t/** the columns (keys) we expect when we unparse objects */\r\n\t\tvar _columns = null;\r\n\r\n\t\t/** whether to prevent outputting cells that can be parsed as formulae by spreadsheet software (Excel and LibreOffice) */\r\n\t\tvar _escapeFormulae = false;\r\n\r\n\t\tunpackConfig();\r\n\r\n\t\tvar quoteCharRegex = new RegExp(escapeRegExp(_quoteChar), 'g');\r\n\r\n\t\tif (typeof _input === 'string')\r\n\t\t\t_input = JSON.parse(_input);\r\n\r\n\t\tif (Array.isArray(_input))\r\n\t\t{\r\n\t\t\tif (!_input.length || Array.isArray(_input[0]))\r\n\t\t\t\treturn serialize(null, _input, _skipEmptyLines);\r\n\t\t\telse if (typeof _input[0] === 'object')\r\n\t\t\t\treturn serialize(_columns || objectKeys(_input[0]), _input, _skipEmptyLines);\r\n\t\t}\r\n\t\telse if (typeof _input === 'object')\r\n\t\t{\r\n\t\t\tif (typeof _input.data === 'string')\r\n\t\t\t\t_input.data = JSON.parse(_input.data);\r\n\r\n\t\t\tif (Array.isArray(_input.data))\r\n\t\t\t{\r\n\t\t\t\tif (!_input.fields)\r\n\t\t\t\t\t_input.fields =  _input.meta && _input.meta.fields;\r\n\r\n\t\t\t\tif (!_input.fields)\r\n\t\t\t\t\t_input.fields =  Array.isArray(_input.data[0])\r\n\t\t\t\t\t\t? _input.fields\r\n\t\t\t\t\t\t: objectKeys(_input.data[0]);\r\n\r\n\t\t\t\tif (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')\r\n\t\t\t\t\t_input.data = [_input.data];\t// handles input like [1,2,3] or ['asdf']\r\n\t\t\t}\r\n\r\n\t\t\treturn serialize(_input.fields || [], _input.data || [], _skipEmptyLines);\r\n\t\t}\r\n\r\n\t\t// Default (any valid paths should return before this)\r\n\t\tthrow new Error('Unable to serialize unrecognized input');\r\n\r\n\r\n\t\tfunction unpackConfig()\r\n\t\t{\r\n\t\t\tif (typeof _config !== 'object')\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (typeof _config.delimiter === 'string'\r\n                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)\r\n\t\t\t{\r\n\t\t\t\t_delimiter = _config.delimiter;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof _config.quotes === 'boolean'\r\n\t\t\t\t|| typeof _config.quotes === 'function'\r\n\t\t\t\t|| Array.isArray(_config.quotes))\r\n\t\t\t\t_quotes = _config.quotes;\r\n\r\n\t\t\tif (typeof _config.skipEmptyLines === 'boolean'\r\n\t\t\t\t|| typeof _config.skipEmptyLines === 'string')\r\n\t\t\t\t_skipEmptyLines = _config.skipEmptyLines;\r\n\r\n\t\t\tif (typeof _config.newline === 'string')\r\n\t\t\t\t_newline = _config.newline;\r\n\r\n\t\t\tif (typeof _config.quoteChar === 'string')\r\n\t\t\t\t_quoteChar = _config.quoteChar;\r\n\r\n\t\t\tif (typeof _config.header === 'boolean')\r\n\t\t\t\t_writeHeader = _config.header;\r\n\r\n\t\t\tif (Array.isArray(_config.columns)) {\r\n\r\n\t\t\t\tif (_config.columns.length === 0) throw new Error('Option columns is empty');\r\n\r\n\t\t\t\t_columns = _config.columns;\r\n\t\t\t}\r\n\r\n\t\t\tif (_config.escapeChar !== undefined) {\r\n\t\t\t\t_escapedQuote = _config.escapeChar + _quoteChar;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof _config.escapeFormulae === 'boolean')\r\n\t\t\t\t_escapeFormulae = _config.escapeFormulae;\r\n\t\t}\r\n\r\n\r\n\t\t/** Turns an object's keys into an array */\r\n\t\tfunction objectKeys(obj)\r\n\t\t{\r\n\t\t\tif (typeof obj !== 'object')\r\n\t\t\t\treturn [];\r\n\t\t\tvar keys = [];\r\n\t\t\tfor (var key in obj)\r\n\t\t\t\tkeys.push(key);\r\n\t\t\treturn keys;\r\n\t\t}\r\n\r\n\t\t/** The double for loop that iterates the data and writes out a CSV string including header row */\r\n\t\tfunction serialize(fields, data, skipEmptyLines)\r\n\t\t{\r\n\t\t\tvar csv = '';\r\n\r\n\t\t\tif (typeof fields === 'string')\r\n\t\t\t\tfields = JSON.parse(fields);\r\n\t\t\tif (typeof data === 'string')\r\n\t\t\t\tdata = JSON.parse(data);\r\n\r\n\t\t\tvar hasHeader = Array.isArray(fields) && fields.length > 0;\r\n\t\t\tvar dataKeyedByField = !(Array.isArray(data[0]));\r\n\r\n\t\t\t// If there a header row, write it first\r\n\t\t\tif (hasHeader && _writeHeader)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < fields.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (i > 0)\r\n\t\t\t\t\t\tcsv += _delimiter;\r\n\t\t\t\t\tcsv += safe(fields[i], i);\r\n\t\t\t\t}\r\n\t\t\t\tif (data.length > 0)\r\n\t\t\t\t\tcsv += _newline;\r\n\t\t\t}\r\n\r\n\t\t\t// Then write out the data\r\n\t\t\tfor (var row = 0; row < data.length; row++)\r\n\t\t\t{\r\n\t\t\t\tvar maxCol = hasHeader ? fields.length : data[row].length;\r\n\r\n\t\t\t\tvar emptyLine = false;\r\n\t\t\t\tvar nullLine = hasHeader ? Object.keys(data[row]).length === 0 : data[row].length === 0;\r\n\t\t\t\tif (skipEmptyLines && !hasHeader)\r\n\t\t\t\t{\r\n\t\t\t\t\temptyLine = skipEmptyLines === 'greedy' ? data[row].join('').trim() === '' : data[row].length === 1 && data[row][0].length === 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (skipEmptyLines === 'greedy' && hasHeader) {\r\n\t\t\t\t\tvar line = [];\r\n\t\t\t\t\tfor (var c = 0; c < maxCol; c++) {\r\n\t\t\t\t\t\tvar cx = dataKeyedByField ? fields[c] : c;\r\n\t\t\t\t\t\tline.push(data[row][cx]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\temptyLine = line.join('').trim() === '';\r\n\t\t\t\t}\r\n\t\t\t\tif (!emptyLine)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (var col = 0; col < maxCol; col++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif (col > 0 && !nullLine)\r\n\t\t\t\t\t\t\tcsv += _delimiter;\r\n\t\t\t\t\t\tvar colIdx = hasHeader && dataKeyedByField ? fields[col] : col;\r\n\t\t\t\t\t\tcsv += safe(data[row][colIdx], col);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (row < data.length - 1 && (!skipEmptyLines || (maxCol > 0 && !nullLine)))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcsv += _newline;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn csv;\r\n\t\t}\r\n\r\n\t\t/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */\r\n\t\tfunction safe(str, col)\r\n\t\t{\r\n\t\t\tif (typeof str === 'undefined' || str === null)\r\n\t\t\t\treturn '';\r\n\r\n\t\t\tif (str.constructor === Date)\r\n\t\t\t\treturn JSON.stringify(str).slice(1, 25);\r\n\r\n\t\t\tif (_escapeFormulae === true && typeof str === \"string\" && (str.match(/^[=+\\-@].*$/) !== null)) {\r\n\t\t\t\tstr = \"'\" + str;\r\n\t\t\t}\r\n\r\n\t\t\tvar escapedQuoteStr = str.toString().replace(quoteCharRegex, _escapedQuote);\r\n\r\n\t\t\tvar needsQuotes = (typeof _quotes === 'boolean' && _quotes)\r\n\t\t\t\t\t\t\t|| (typeof _quotes === 'function' && _quotes(str, col))\r\n\t\t\t\t\t\t\t|| (Array.isArray(_quotes) && _quotes[col])\r\n\t\t\t\t\t\t\t|| hasAny(escapedQuoteStr, Papa.BAD_DELIMITERS)\r\n\t\t\t\t\t\t\t|| escapedQuoteStr.indexOf(_delimiter) > -1\r\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(0) === ' '\r\n\t\t\t\t\t\t\t|| escapedQuoteStr.charAt(escapedQuoteStr.length - 1) === ' ';\r\n\r\n\t\t\treturn needsQuotes ? _quoteChar + escapedQuoteStr + _quoteChar : escapedQuoteStr;\r\n\t\t}\r\n\r\n\t\tfunction hasAny(str, substrings)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < substrings.length; i++)\r\n\t\t\t\tif (str.indexOf(substrings[i]) > -1)\r\n\t\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/** ChunkStreamer is the base prototype for various streamer implementations. */\r\n\tfunction ChunkStreamer(config)\r\n\t{\r\n\t\tthis._handle = null;\r\n\t\tthis._finished = false;\r\n\t\tthis._completed = false;\r\n\t\tthis._halted = false;\r\n\t\tthis._input = null;\r\n\t\tthis._baseIndex = 0;\r\n\t\tthis._partialLine = '';\r\n\t\tthis._rowCount = 0;\r\n\t\tthis._start = 0;\r\n\t\tthis._nextChunk = null;\r\n\t\tthis.isFirstChunk = true;\r\n\t\tthis._completeResults = {\r\n\t\t\tdata: [],\r\n\t\t\terrors: [],\r\n\t\t\tmeta: {}\r\n\t\t};\r\n\t\treplaceConfig.call(this, config);\r\n\r\n\t\tthis.parseChunk = function(chunk, isFakeChunk)\r\n\t\t{\r\n\t\t\t// First chunk pre-processing\r\n\t\t\tif (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))\r\n\t\t\t{\r\n\t\t\t\tvar modifiedChunk = this._config.beforeFirstChunk(chunk);\r\n\t\t\t\tif (modifiedChunk !== undefined)\r\n\t\t\t\t\tchunk = modifiedChunk;\r\n\t\t\t}\r\n\t\t\tthis.isFirstChunk = false;\r\n\t\t\tthis._halted = false;\r\n\r\n\t\t\t// Rejoin the line we likely just split in two by chunking the file\r\n\t\t\tvar aggregate = this._partialLine + chunk;\r\n\t\t\tthis._partialLine = '';\r\n\r\n\t\t\tvar results = this._handle.parse(aggregate, this._baseIndex, !this._finished);\r\n\r\n\t\t\tif (this._handle.paused() || this._handle.aborted()) {\r\n\t\t\t\tthis._halted = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar lastIndex = results.meta.cursor;\r\n\r\n\t\t\tif (!this._finished)\r\n\t\t\t{\r\n\t\t\t\tthis._partialLine = aggregate.substring(lastIndex - this._baseIndex);\r\n\t\t\t\tthis._baseIndex = lastIndex;\r\n\t\t\t}\r\n\r\n\t\t\tif (results && results.data)\r\n\t\t\t\tthis._rowCount += results.data.length;\r\n\r\n\t\t\tvar finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);\r\n\r\n\t\t\tif (IS_PAPA_WORKER)\r\n\t\t\t{\r\n\t\t\t\tglobal.postMessage({\r\n\t\t\t\t\tresults: results,\r\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\r\n\t\t\t\t\tfinished: finishedIncludingPreview\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if (isFunction(this._config.chunk) && !isFakeChunk)\r\n\t\t\t{\r\n\t\t\t\tthis._config.chunk(results, this._handle);\r\n\t\t\t\tif (this._handle.paused() || this._handle.aborted()) {\r\n\t\t\t\t\tthis._halted = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tresults = undefined;\r\n\t\t\t\tthis._completeResults = undefined;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._config.step && !this._config.chunk) {\r\n\t\t\t\tthis._completeResults.data = this._completeResults.data.concat(results.data);\r\n\t\t\t\tthis._completeResults.errors = this._completeResults.errors.concat(results.errors);\r\n\t\t\t\tthis._completeResults.meta = results.meta;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {\r\n\t\t\t\tthis._config.complete(this._completeResults, this._input);\r\n\t\t\t\tthis._completed = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (!finishedIncludingPreview && (!results || !results.meta.paused))\r\n\t\t\t\tthis._nextChunk();\r\n\r\n\t\t\treturn results;\r\n\t\t};\r\n\r\n\t\tthis._sendError = function(error)\r\n\t\t{\r\n\t\t\tif (isFunction(this._config.error))\r\n\t\t\t\tthis._config.error(error);\r\n\t\t\telse if (IS_PAPA_WORKER && this._config.error)\r\n\t\t\t{\r\n\t\t\t\tglobal.postMessage({\r\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\r\n\t\t\t\t\terror: error,\r\n\t\t\t\t\tfinished: false\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction replaceConfig(config)\r\n\t\t{\r\n\t\t\t// Deep-copy the config so we can edit it\r\n\t\t\tvar configCopy = copy(config);\r\n\t\t\tconfigCopy.chunkSize = parseInt(configCopy.chunkSize);\t// parseInt VERY important so we don't concatenate strings!\r\n\t\t\tif (!config.step && !config.chunk)\r\n\t\t\t\tconfigCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196\r\n\t\t\tthis._handle = new ParserHandle(configCopy);\r\n\t\t\tthis._handle.streamer = this;\r\n\t\t\tthis._config = configCopy;\t// persist the copy to the caller\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction NetworkStreamer(config)\r\n\t{\r\n\t\tconfig = config || {};\r\n\t\tif (!config.chunkSize)\r\n\t\t\tconfig.chunkSize = Papa.RemoteChunkSize;\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tvar xhr;\r\n\r\n\t\tif (IS_WORKER)\r\n\t\t{\r\n\t\t\tthis._nextChunk = function()\r\n\t\t\t{\r\n\t\t\t\tthis._readChunk();\r\n\t\t\t\tthis._chunkLoaded();\r\n\t\t\t};\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis._nextChunk = function()\r\n\t\t\t{\r\n\t\t\t\tthis._readChunk();\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tthis.stream = function(url)\r\n\t\t{\r\n\t\t\tthis._input = url;\r\n\t\t\tthis._nextChunk();\t// Starts streaming\r\n\t\t};\r\n\r\n\t\tthis._readChunk = function()\r\n\t\t{\r\n\t\t\tif (this._finished)\r\n\t\t\t{\r\n\t\t\t\tthis._chunkLoaded();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\txhr = new XMLHttpRequest();\r\n\r\n\t\t\tif (this._config.withCredentials)\r\n\t\t\t{\r\n\t\t\t\txhr.withCredentials = this._config.withCredentials;\r\n\t\t\t}\r\n\r\n\t\t\tif (!IS_WORKER)\r\n\t\t\t{\r\n\t\t\t\txhr.onload = bindFunction(this._chunkLoaded, this);\r\n\t\t\t\txhr.onerror = bindFunction(this._chunkError, this);\r\n\t\t\t}\r\n\r\n\t\t\txhr.open(this._config.downloadRequestBody ? 'POST' : 'GET', this._input, !IS_WORKER);\r\n\t\t\t// Headers can only be set when once the request state is OPENED\r\n\t\t\tif (this._config.downloadRequestHeaders)\r\n\t\t\t{\r\n\t\t\t\tvar headers = this._config.downloadRequestHeaders;\r\n\r\n\t\t\t\tfor (var headerName in headers)\r\n\t\t\t\t{\r\n\t\t\t\t\txhr.setRequestHeader(headerName, headers[headerName]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._config.chunkSize)\r\n\t\t\t{\r\n\t\t\t\tvar end = this._start + this._config.chunkSize - 1;\t// minus one because byte range is inclusive\r\n\t\t\t\txhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\txhr.send(this._config.downloadRequestBody);\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\t\t\t\tthis._chunkError(err.message);\r\n\t\t\t}\r\n\r\n\t\t\tif (IS_WORKER && xhr.status === 0)\r\n\t\t\t\tthis._chunkError();\r\n\t\t};\r\n\r\n\t\tthis._chunkLoaded = function()\r\n\t\t{\r\n\t\t\tif (xhr.readyState !== 4)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (xhr.status < 200 || xhr.status >= 400)\r\n\t\t\t{\r\n\t\t\t\tthis._chunkError();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Use chunckSize as it may be a diference on reponse lentgh due to characters with more than 1 byte\r\n\t\t\tthis._start += this._config.chunkSize ? this._config.chunkSize : xhr.responseText.length;\r\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= getFileSize(xhr);\r\n\t\t\tthis.parseChunk(xhr.responseText);\r\n\t\t};\r\n\r\n\t\tthis._chunkError = function(errorMessage)\r\n\t\t{\r\n\t\t\tvar errorText = xhr.statusText || errorMessage;\r\n\t\t\tthis._sendError(new Error(errorText));\r\n\t\t};\r\n\r\n\t\tfunction getFileSize(xhr)\r\n\t\t{\r\n\t\t\tvar contentRange = xhr.getResponseHeader('Content-Range');\r\n\t\t\tif (contentRange === null) { // no content range, then finish!\r\n\t\t\t\treturn -1;\r\n\t\t\t}\r\n\t\t\treturn parseInt(contentRange.substring(contentRange.lastIndexOf('/') + 1));\r\n\t\t}\r\n\t}\r\n\tNetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);\r\n\tNetworkStreamer.prototype.constructor = NetworkStreamer;\r\n\r\n\r\n\tfunction FileStreamer(config)\r\n\t{\r\n\t\tconfig = config || {};\r\n\t\tif (!config.chunkSize)\r\n\t\t\tconfig.chunkSize = Papa.LocalChunkSize;\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tvar reader, slice;\r\n\r\n\t\t// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862\r\n\t\t// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76\r\n\t\tvar usingAsyncReader = typeof FileReader !== 'undefined';\t// Safari doesn't consider it a function - see issue #105\r\n\r\n\t\tthis.stream = function(file)\r\n\t\t{\r\n\t\t\tthis._input = file;\r\n\t\t\tslice = file.slice || file.webkitSlice || file.mozSlice;\r\n\r\n\t\t\tif (usingAsyncReader)\r\n\t\t\t{\r\n\t\t\t\treader = new FileReader();\t\t// Preferred method of reading files, even in workers\r\n\t\t\t\treader.onload = bindFunction(this._chunkLoaded, this);\r\n\t\t\t\treader.onerror = bindFunction(this._chunkError, this);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\t\treader = new FileReaderSync();\t// Hack for running in a web worker in Firefox\r\n\r\n\t\t\tthis._nextChunk();\t// Starts streaming\r\n\t\t};\r\n\r\n\t\tthis._nextChunk = function()\r\n\t\t{\r\n\t\t\tif (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))\r\n\t\t\t\tthis._readChunk();\r\n\t\t};\r\n\r\n\t\tthis._readChunk = function()\r\n\t\t{\r\n\t\t\tvar input = this._input;\r\n\t\t\tif (this._config.chunkSize)\r\n\t\t\t{\r\n\t\t\t\tvar end = Math.min(this._start + this._config.chunkSize, this._input.size);\r\n\t\t\t\tinput = slice.call(input, this._start, end);\r\n\t\t\t}\r\n\t\t\tvar txt = reader.readAsText(input, this._config.encoding);\r\n\t\t\tif (!usingAsyncReader)\r\n\t\t\t\tthis._chunkLoaded({ target: { result: txt } });\t// mimic the async signature\r\n\t\t};\r\n\r\n\t\tthis._chunkLoaded = function(event)\r\n\t\t{\r\n\t\t\t// Very important to increment start each time before handling results\r\n\t\t\tthis._start += this._config.chunkSize;\r\n\t\t\tthis._finished = !this._config.chunkSize || this._start >= this._input.size;\r\n\t\t\tthis.parseChunk(event.target.result);\r\n\t\t};\r\n\r\n\t\tthis._chunkError = function()\r\n\t\t{\r\n\t\t\tthis._sendError(reader.error);\r\n\t\t};\r\n\r\n\t}\r\n\tFileStreamer.prototype = Object.create(ChunkStreamer.prototype);\r\n\tFileStreamer.prototype.constructor = FileStreamer;\r\n\r\n\r\n\tfunction StringStreamer(config)\r\n\t{\r\n\t\tconfig = config || {};\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tvar remaining;\r\n\t\tthis.stream = function(s)\r\n\t\t{\r\n\t\t\tremaining = s;\r\n\t\t\treturn this._nextChunk();\r\n\t\t};\r\n\t\tthis._nextChunk = function()\r\n\t\t{\r\n\t\t\tif (this._finished) return;\r\n\t\t\tvar size = this._config.chunkSize;\r\n\t\t\tvar chunk;\r\n\t\t\tif(size) {\r\n\t\t\t\tchunk = remaining.substring(0, size);\r\n\t\t\t\tremaining = remaining.substring(size);\r\n\t\t\t} else {\r\n\t\t\t\tchunk = remaining;\r\n\t\t\t\tremaining = '';\r\n\t\t\t}\r\n\t\t\tthis._finished = !remaining;\r\n\t\t\treturn this.parseChunk(chunk);\r\n\t\t};\r\n\t}\r\n\tStringStreamer.prototype = Object.create(StringStreamer.prototype);\r\n\tStringStreamer.prototype.constructor = StringStreamer;\r\n\r\n\r\n\tfunction ReadableStreamStreamer(config)\r\n\t{\r\n\t\tconfig = config || {};\r\n\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tvar queue = [];\r\n\t\tvar parseOnData = true;\r\n\t\tvar streamHasEnded = false;\r\n\r\n\t\tthis.pause = function()\r\n\t\t{\r\n\t\t\tChunkStreamer.prototype.pause.apply(this, arguments);\r\n\t\t\tthis._input.pause();\r\n\t\t};\r\n\r\n\t\tthis.resume = function()\r\n\t\t{\r\n\t\t\tChunkStreamer.prototype.resume.apply(this, arguments);\r\n\t\t\tthis._input.resume();\r\n\t\t};\r\n\r\n\t\tthis.stream = function(stream)\r\n\t\t{\r\n\t\t\tthis._input = stream;\r\n\r\n\t\t\tthis._input.on('data', this._streamData);\r\n\t\t\tthis._input.on('end', this._streamEnd);\r\n\t\t\tthis._input.on('error', this._streamError);\r\n\t\t};\r\n\r\n\t\tthis._checkIsFinished = function()\r\n\t\t{\r\n\t\t\tif (streamHasEnded && queue.length === 1) {\r\n\t\t\t\tthis._finished = true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._nextChunk = function()\r\n\t\t{\r\n\t\t\tthis._checkIsFinished();\r\n\t\t\tif (queue.length)\r\n\t\t\t{\r\n\t\t\t\tthis.parseChunk(queue.shift());\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tparseOnData = true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._streamData = bindFunction(function(chunk)\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tqueue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));\r\n\r\n\t\t\t\tif (parseOnData)\r\n\t\t\t\t{\r\n\t\t\t\t\tparseOnData = false;\r\n\t\t\t\t\tthis._checkIsFinished();\r\n\t\t\t\t\tthis.parseChunk(queue.shift());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (error)\r\n\t\t\t{\r\n\t\t\t\tthis._streamError(error);\r\n\t\t\t}\r\n\t\t}, this);\r\n\r\n\t\tthis._streamError = bindFunction(function(error)\r\n\t\t{\r\n\t\t\tthis._streamCleanUp();\r\n\t\t\tthis._sendError(error);\r\n\t\t}, this);\r\n\r\n\t\tthis._streamEnd = bindFunction(function()\r\n\t\t{\r\n\t\t\tthis._streamCleanUp();\r\n\t\t\tstreamHasEnded = true;\r\n\t\t\tthis._streamData('');\r\n\t\t}, this);\r\n\r\n\t\tthis._streamCleanUp = bindFunction(function()\r\n\t\t{\r\n\t\t\tthis._input.removeListener('data', this._streamData);\r\n\t\t\tthis._input.removeListener('end', this._streamEnd);\r\n\t\t\tthis._input.removeListener('error', this._streamError);\r\n\t\t}, this);\r\n\t}\r\n\tReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\r\n\tReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;\r\n\r\n\r\n\tfunction DuplexStreamStreamer(_config) {\r\n\t\tvar Duplex = require('stream').Duplex;\r\n\t\tvar config = copy(_config);\r\n\t\tvar parseOnWrite = true;\r\n\t\tvar writeStreamHasFinished = false;\r\n\t\tvar parseCallbackQueue = [];\r\n\t\tvar stream = null;\r\n\r\n\t\tthis._onCsvData = function(results)\r\n\t\t{\r\n\t\t\tvar data = results.data;\r\n\t\t\tif (!stream.push(data) && !this._handle.paused()) {\r\n\t\t\t\t// the writeable consumer buffer has filled up\r\n\t\t\t\t// so we need to pause until more items\r\n\t\t\t\t// can be processed\r\n\t\t\t\tthis._handle.pause();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._onCsvComplete = function()\r\n\t\t{\r\n\t\t\t// node will finish the read stream when\r\n\t\t\t// null is pushed\r\n\t\t\tstream.push(null);\r\n\t\t};\r\n\r\n\t\tconfig.step = bindFunction(this._onCsvData, this);\r\n\t\tconfig.complete = bindFunction(this._onCsvComplete, this);\r\n\t\tChunkStreamer.call(this, config);\r\n\r\n\t\tthis._nextChunk = function()\r\n\t\t{\r\n\t\t\tif (writeStreamHasFinished && parseCallbackQueue.length === 1) {\r\n\t\t\t\tthis._finished = true;\r\n\t\t\t}\r\n\t\t\tif (parseCallbackQueue.length) {\r\n\t\t\t\tparseCallbackQueue.shift()();\r\n\t\t\t} else {\r\n\t\t\t\tparseOnWrite = true;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._addToParseQueue = function(chunk, callback)\r\n\t\t{\r\n\t\t\t// add to queue so that we can indicate\r\n\t\t\t// completion via callback\r\n\t\t\t// node will automatically pause the incoming stream\r\n\t\t\t// when too many items have been added without their\r\n\t\t\t// callback being invoked\r\n\t\t\tparseCallbackQueue.push(bindFunction(function() {\r\n\t\t\t\tthis.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));\r\n\t\t\t\tif (isFunction(callback)) {\r\n\t\t\t\t\treturn callback();\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\tif (parseOnWrite) {\r\n\t\t\t\tparseOnWrite = false;\r\n\t\t\t\tthis._nextChunk();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._onRead = function()\r\n\t\t{\r\n\t\t\tif (this._handle.paused()) {\r\n\t\t\t\t// the writeable consumer can handle more data\r\n\t\t\t\t// so resume the chunk parsing\r\n\t\t\t\tthis._handle.resume();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis._onWrite = function(chunk, encoding, callback)\r\n\t\t{\r\n\t\t\tthis._addToParseQueue(chunk, callback);\r\n\t\t};\r\n\r\n\t\tthis._onWriteComplete = function()\r\n\t\t{\r\n\t\t\twriteStreamHasFinished = true;\r\n\t\t\t// have to write empty string\r\n\t\t\t// so parser knows its done\r\n\t\t\tthis._addToParseQueue('');\r\n\t\t};\r\n\r\n\t\tthis.getStream = function()\r\n\t\t{\r\n\t\t\treturn stream;\r\n\t\t};\r\n\t\tstream = new Duplex({\r\n\t\t\treadableObjectMode: true,\r\n\t\t\tdecodeStrings: false,\r\n\t\t\tread: bindFunction(this._onRead, this),\r\n\t\t\twrite: bindFunction(this._onWrite, this)\r\n\t\t});\r\n\t\tstream.once('finish', bindFunction(this._onWriteComplete, this));\r\n\t}\r\n\tif (typeof PAPA_BROWSER_CONTEXT === 'undefined') {\r\n\t\tDuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);\r\n\t\tDuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;\r\n\t}\r\n\r\n\r\n\t// Use one ParserHandle per entire CSV file or string\r\n\tfunction ParserHandle(_config)\r\n\t{\r\n\t\t// One goal is to minimize the use of regular expressions...\r\n\t\tvar MAX_FLOAT = Math.pow(2, 53);\r\n\t\tvar MIN_FLOAT = -MAX_FLOAT;\r\n\t\tvar FLOAT = /^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/;\r\n\t\tvar ISO_DATE = /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/;\r\n\t\tvar self = this;\r\n\t\tvar _stepCounter = 0;\t// Number of times step was called (number of rows parsed)\r\n\t\tvar _rowCounter = 0;\t// Number of rows that have been parsed so far\r\n\t\tvar _input;\t\t\t\t// The input being parsed\r\n\t\tvar _parser;\t\t\t// The core parser being used\r\n\t\tvar _paused = false;\t// Whether we are paused or not\r\n\t\tvar _aborted = false;\t// Whether the parser has aborted or not\r\n\t\tvar _delimiterError;\t// Temporary state between delimiter detection and processing results\r\n\t\tvar _fields = [];\t\t// Fields are from the header row of the input, if there is one\r\n\t\tvar _results = {\t\t// The last results returned from the parser\r\n\t\t\tdata: [],\r\n\t\t\terrors: [],\r\n\t\t\tmeta: {}\r\n\t\t};\r\n\r\n\t\tif (isFunction(_config.step))\r\n\t\t{\r\n\t\t\tvar userStep = _config.step;\r\n\t\t\t_config.step = function(results)\r\n\t\t\t{\r\n\t\t\t\t_results = results;\r\n\r\n\t\t\t\tif (needsHeaderRow())\r\n\t\t\t\t\tprocessResults();\r\n\t\t\t\telse\t// only call user's step function after header row\r\n\t\t\t\t{\r\n\t\t\t\t\tprocessResults();\r\n\r\n\t\t\t\t\t// It's possbile that this line was empty and there's no row here after all\r\n\t\t\t\t\tif (_results.data.length === 0)\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t_stepCounter += results.data.length;\r\n\t\t\t\t\tif (_config.preview && _stepCounter > _config.preview)\r\n\t\t\t\t\t\t_parser.abort();\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t_results.data = _results.data[0];\r\n\t\t\t\t\t\tuserStep(_results, self);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Parses input. Most users won't need, and shouldn't mess with, the baseIndex\r\n\t\t * and ignoreLastRow parameters. They are used by streamers (wrapper functions)\r\n\t\t * when an input comes in multiple chunks, like from a file.\r\n\t\t */\r\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\r\n\t\t{\r\n\t\t\tvar quoteChar = _config.quoteChar || '\"';\r\n\t\t\tif (!_config.newline)\r\n\t\t\t\t_config.newline = guessLineEndings(input, quoteChar);\r\n\r\n\t\t\t_delimiterError = false;\r\n\t\t\tif (!_config.delimiter)\r\n\t\t\t{\r\n\t\t\t\tvar delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments, _config.delimitersToGuess);\r\n\t\t\t\tif (delimGuess.successful)\r\n\t\t\t\t\t_config.delimiter = delimGuess.bestDelimiter;\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t_delimiterError = true;\t// add error after parsing (otherwise it would be overwritten)\r\n\t\t\t\t\t_config.delimiter = Papa.DefaultDelimiter;\r\n\t\t\t\t}\r\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\r\n\t\t\t}\r\n\t\t\telse if(isFunction(_config.delimiter))\r\n\t\t\t{\r\n\t\t\t\t_config.delimiter = _config.delimiter(input);\r\n\t\t\t\t_results.meta.delimiter = _config.delimiter;\r\n\t\t\t}\r\n\r\n\t\t\tvar parserConfig = copy(_config);\r\n\t\t\tif (_config.preview && _config.header)\r\n\t\t\t\tparserConfig.preview++;\t// to compensate for header row\r\n\r\n\t\t\t_input = input;\r\n\t\t\t_parser = new Parser(parserConfig);\r\n\t\t\t_results = _parser.parse(_input, baseIndex, ignoreLastRow);\r\n\t\t\tprocessResults();\r\n\t\t\treturn _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });\r\n\t\t};\r\n\r\n\t\tthis.paused = function()\r\n\t\t{\r\n\t\t\treturn _paused;\r\n\t\t};\r\n\r\n\t\tthis.pause = function()\r\n\t\t{\r\n\t\t\t_paused = true;\r\n\t\t\t_parser.abort();\r\n\r\n\t\t\t// If it is streaming via \"chunking\", the reader will start appending correctly already so no need to substring,\r\n\t\t\t// otherwise we can get duplicate content within a row\r\n\t\t\t_input = isFunction(_config.chunk) ? \"\" : _input.substring(_parser.getCharIndex());\r\n\t\t};\r\n\r\n\t\tthis.resume = function()\r\n\t\t{\r\n\t\t\tif(self.streamer._halted) {\r\n\t\t\t\t_paused = false;\r\n\t\t\t\tself.streamer.parseChunk(_input, true);\r\n\t\t\t} else {\r\n\t\t\t\t// Bugfix: #636 In case the processing hasn't halted yet\r\n\t\t\t\t// wait for it to halt in order to resume\r\n\t\t\t\tsetTimeout(self.resume, 3);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.aborted = function()\r\n\t\t{\r\n\t\t\treturn _aborted;\r\n\t\t};\r\n\r\n\t\tthis.abort = function()\r\n\t\t{\r\n\t\t\t_aborted = true;\r\n\t\t\t_parser.abort();\r\n\t\t\t_results.meta.aborted = true;\r\n\t\t\tif (isFunction(_config.complete))\r\n\t\t\t\t_config.complete(_results);\r\n\t\t\t_input = '';\r\n\t\t};\r\n\r\n\t\tfunction testEmptyLine(s) {\r\n\t\t\treturn _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;\r\n\t\t}\r\n\r\n\t\tfunction testFloat(s) {\r\n\t\t\tif (FLOAT.test(s)) {\r\n\t\t\t\tvar floatValue = parseFloat(s);\r\n\t\t\t\tif (floatValue > MIN_FLOAT && floatValue < MAX_FLOAT) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction processResults()\r\n\t\t{\r\n\t\t\tif (_results && _delimiterError)\r\n\t\t\t{\r\n\t\t\t\taddError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \\'' + Papa.DefaultDelimiter + '\\'');\r\n\t\t\t\t_delimiterError = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (_config.skipEmptyLines)\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < _results.data.length; i++)\r\n\t\t\t\t\tif (testEmptyLine(_results.data[i]))\r\n\t\t\t\t\t\t_results.data.splice(i--, 1);\r\n\t\t\t}\r\n\r\n\t\t\tif (needsHeaderRow())\r\n\t\t\t\tfillHeaderFields();\r\n\r\n\t\t\treturn applyHeaderAndDynamicTypingAndTransformation();\r\n\t\t}\r\n\r\n\t\tfunction needsHeaderRow()\r\n\t\t{\r\n\t\t\treturn _config.header && _fields.length === 0;\r\n\t\t}\r\n\r\n\t\tfunction fillHeaderFields()\r\n\t\t{\r\n\t\t\tif (!_results)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tfunction addHeader(header, i)\r\n\t\t\t{\r\n\t\t\t\tif (isFunction(_config.transformHeader))\r\n\t\t\t\t\theader = _config.transformHeader(header, i);\r\n\r\n\t\t\t\t_fields.push(header);\r\n\t\t\t}\r\n\r\n\t\t\tif (Array.isArray(_results.data[0]))\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; needsHeaderRow() && i < _results.data.length; i++)\r\n\t\t\t\t\t_results.data[i].forEach(addHeader);\r\n\r\n\t\t\t\t_results.data.splice(0, 1);\r\n\t\t\t}\r\n\t\t\t// if _results.data[0] is not an array, we are in a step where _results.data is the row.\r\n\t\t\telse\r\n\t\t\t\t_results.data.forEach(addHeader);\r\n\t\t}\r\n\r\n\t\tfunction shouldApplyDynamicTyping(field) {\r\n\t\t\t// Cache function values to avoid calling it for each row\r\n\t\t\tif (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {\r\n\t\t\t\t_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);\r\n\t\t\t}\r\n\t\t\treturn (_config.dynamicTyping[field] || _config.dynamicTyping) === true;\r\n\t\t}\r\n\r\n\t\tfunction parseDynamic(field, value)\r\n\t\t{\r\n\t\t\tif (shouldApplyDynamicTyping(field))\r\n\t\t\t{\r\n\t\t\t\tif (value === 'true' || value === 'TRUE')\r\n\t\t\t\t\treturn true;\r\n\t\t\t\telse if (value === 'false' || value === 'FALSE')\r\n\t\t\t\t\treturn false;\r\n\t\t\t\telse if (testFloat(value))\r\n\t\t\t\t\treturn parseFloat(value);\r\n\t\t\t\telse if (ISO_DATE.test(value))\r\n\t\t\t\t\treturn new Date(value);\r\n\t\t\t\telse\r\n\t\t\t\t\treturn (value === '' ? null : value);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tfunction applyHeaderAndDynamicTypingAndTransformation()\r\n\t\t{\r\n\t\t\tif (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))\r\n\t\t\t\treturn _results;\r\n\r\n\t\t\tfunction processRow(rowSource, i)\r\n\t\t\t{\r\n\t\t\t\tvar row = _config.header ? {} : [];\r\n\r\n\t\t\t\tvar j;\r\n\t\t\t\tfor (j = 0; j < rowSource.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar field = j;\r\n\t\t\t\t\tvar value = rowSource[j];\r\n\r\n\t\t\t\t\tif (_config.header)\r\n\t\t\t\t\t\tfield = j >= _fields.length ? '__parsed_extra' : _fields[j];\r\n\r\n\t\t\t\t\tif (_config.transform)\r\n\t\t\t\t\t\tvalue = _config.transform(value,field);\r\n\r\n\t\t\t\t\tvalue = parseDynamic(field, value);\r\n\r\n\t\t\t\t\tif (field === '__parsed_extra')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trow[field] = row[field] || [];\r\n\t\t\t\t\t\trow[field].push(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\trow[field] = value;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (_config.header)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (j > _fields.length)\r\n\t\t\t\t\t\taddError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\r\n\t\t\t\t\telse if (j < _fields.length)\r\n\t\t\t\t\t\taddError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn row;\r\n\t\t\t}\r\n\r\n\t\t\tvar incrementBy = 1;\r\n\t\t\tif (!_results.data.length || Array.isArray(_results.data[0]))\r\n\t\t\t{\r\n\t\t\t\t_results.data = _results.data.map(processRow);\r\n\t\t\t\tincrementBy = _results.data.length;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\t_results.data = processRow(_results.data, 0);\r\n\r\n\r\n\t\t\tif (_config.header && _results.meta)\r\n\t\t\t\t_results.meta.fields = _fields;\r\n\r\n\t\t\t_rowCounter += incrementBy;\r\n\t\t\treturn _results;\r\n\t\t}\r\n\r\n\t\tfunction guessDelimiter(input, newline, skipEmptyLines, comments, delimitersToGuess) {\r\n\t\t\tvar bestDelim, bestDelta, fieldCountPrevRow, maxFieldCount;\r\n\r\n\t\t\tdelimitersToGuess = delimitersToGuess || [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];\r\n\r\n\t\t\tfor (var i = 0; i < delimitersToGuess.length; i++) {\r\n\t\t\t\tvar delim = delimitersToGuess[i];\r\n\t\t\t\tvar delta = 0, avgFieldCount = 0, emptyLinesCount = 0;\r\n\t\t\t\tfieldCountPrevRow = undefined;\r\n\r\n\t\t\t\tvar preview = new Parser({\r\n\t\t\t\t\tcomments: comments,\r\n\t\t\t\t\tdelimiter: delim,\r\n\t\t\t\t\tnewline: newline,\r\n\t\t\t\t\tpreview: 10\r\n\t\t\t\t}).parse(input);\r\n\r\n\t\t\t\tfor (var j = 0; j < preview.data.length; j++) {\r\n\t\t\t\t\tif (skipEmptyLines && testEmptyLine(preview.data[j])) {\r\n\t\t\t\t\t\temptyLinesCount++;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar fieldCount = preview.data[j].length;\r\n\t\t\t\t\tavgFieldCount += fieldCount;\r\n\r\n\t\t\t\t\tif (typeof fieldCountPrevRow === 'undefined') {\r\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (fieldCount > 0) {\r\n\t\t\t\t\t\tdelta += Math.abs(fieldCount - fieldCountPrevRow);\r\n\t\t\t\t\t\tfieldCountPrevRow = fieldCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (preview.data.length > 0)\r\n\t\t\t\t\tavgFieldCount /= (preview.data.length - emptyLinesCount);\r\n\r\n\t\t\t\tif ((typeof bestDelta === 'undefined' || delta <= bestDelta)\r\n\t\t\t\t\t&& (typeof maxFieldCount === 'undefined' || avgFieldCount > maxFieldCount) && avgFieldCount > 1.99) {\r\n\t\t\t\t\tbestDelta = delta;\r\n\t\t\t\t\tbestDelim = delim;\r\n\t\t\t\t\tmaxFieldCount = avgFieldCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t_config.delimiter = bestDelim;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tsuccessful: !!bestDelim,\r\n\t\t\t\tbestDelimiter: bestDelim\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tfunction guessLineEndings(input, quoteChar)\r\n\t\t{\r\n\t\t\tinput = input.substring(0, 1024 * 1024);\t// max length 1 MB\r\n\t\t\t// Replace all the text inside quotes\r\n\t\t\tvar re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');\r\n\t\t\tinput = input.replace(re, '');\r\n\r\n\t\t\tvar r = input.split('\\r');\r\n\r\n\t\t\tvar n = input.split('\\n');\r\n\r\n\t\t\tvar nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);\r\n\r\n\t\t\tif (r.length === 1 || nAppearsFirst)\r\n\t\t\t\treturn '\\n';\r\n\r\n\t\t\tvar numWithN = 0;\r\n\t\t\tfor (var i = 0; i < r.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (r[i][0] === '\\n')\r\n\t\t\t\t\tnumWithN++;\r\n\t\t\t}\r\n\r\n\t\t\treturn numWithN >= r.length / 2 ? '\\r\\n' : '\\r';\r\n\t\t}\r\n\r\n\t\tfunction addError(type, code, msg, row)\r\n\t\t{\r\n\t\t\tvar error = {\r\n\t\t\t\ttype: type,\r\n\t\t\t\tcode: code,\r\n\t\t\t\tmessage: msg\r\n\t\t\t};\r\n\t\t\tif(row !== undefined) {\r\n\t\t\t\terror.row = row;\r\n\t\t\t}\r\n\t\t\t_results.errors.push(error);\r\n\t\t}\r\n\t}\r\n\r\n\t/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */\r\n\tfunction escapeRegExp(string)\r\n\t{\r\n\t\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n\t}\r\n\r\n\t/** The core parser implements speedy and correct CSV parsing */\r\n\tfunction Parser(config)\r\n\t{\r\n\t\t// Unpack the config object\r\n\t\tconfig = config || {};\r\n\t\tvar delim = config.delimiter;\r\n\t\tvar newline = config.newline;\r\n\t\tvar comments = config.comments;\r\n\t\tvar step = config.step;\r\n\t\tvar preview = config.preview;\r\n\t\tvar fastMode = config.fastMode;\r\n\t\tvar quoteChar;\r\n\t\t/** Allows for no quoteChar by setting quoteChar to undefined in config */\r\n\t\tif (config.quoteChar === undefined) {\r\n\t\t\tquoteChar = '\"';\r\n\t\t} else {\r\n\t\t\tquoteChar = config.quoteChar;\r\n\t\t}\r\n\t\tvar escapeChar = quoteChar;\r\n\t\tif (config.escapeChar !== undefined) {\r\n\t\t\tescapeChar = config.escapeChar;\r\n\t\t}\r\n\r\n\t\t// Delimiter must be valid\r\n\t\tif (typeof delim !== 'string'\r\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)\r\n\t\t\tdelim = ',';\r\n\r\n\t\t// Comment character must be valid\r\n\t\tif (comments === delim)\r\n\t\t\tthrow new Error('Comment character same as delimiter');\r\n\t\telse if (comments === true)\r\n\t\t\tcomments = '#';\r\n\t\telse if (typeof comments !== 'string'\r\n\t\t\t|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)\r\n\t\t\tcomments = false;\r\n\r\n\t\t// Newline must be valid: \\r, \\n, or \\r\\n\r\n\t\tif (newline !== '\\n' && newline !== '\\r' && newline !== '\\r\\n')\r\n\t\t\tnewline = '\\n';\r\n\r\n\t\t// We're gonna need these at the Parser scope\r\n\t\tvar cursor = 0;\r\n\t\tvar aborted = false;\r\n\r\n\t\tthis.parse = function(input, baseIndex, ignoreLastRow)\r\n\t\t{\r\n\t\t\t// For some reason, in Chrome, this speeds things up (!?)\r\n\t\t\tif (typeof input !== 'string')\r\n\t\t\t\tthrow new Error('Input must be a string');\r\n\r\n\t\t\t// We don't need to compute some of these every time parse() is called,\r\n\t\t\t// but having them in a more local scope seems to perform better\r\n\t\t\tvar inputLen = input.length,\r\n\t\t\t\tdelimLen = delim.length,\r\n\t\t\t\tnewlineLen = newline.length,\r\n\t\t\t\tcommentsLen = comments.length;\r\n\t\t\tvar stepIsFunction = isFunction(step);\r\n\r\n\t\t\t// Establish starting state\r\n\t\t\tcursor = 0;\r\n\t\t\tvar data = [], errors = [], row = [], lastCursor = 0;\r\n\r\n\t\t\tif (!input)\r\n\t\t\t\treturn returnable();\r\n\r\n\t\t\tif (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))\r\n\t\t\t{\r\n\t\t\t\tvar rows = input.split(newline);\r\n\t\t\t\tfor (var i = 0; i < rows.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\trow = rows[i];\r\n\t\t\t\t\tcursor += row.length;\r\n\t\t\t\t\tif (i !== rows.length - 1)\r\n\t\t\t\t\t\tcursor += newline.length;\r\n\t\t\t\t\telse if (ignoreLastRow)\r\n\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\tif (comments && row.substring(0, commentsLen) === comments)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\tif (stepIsFunction)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata = [];\r\n\t\t\t\t\t\tpushRow(row.split(delim));\r\n\t\t\t\t\t\tdoStep();\r\n\t\t\t\t\t\tif (aborted)\r\n\t\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tpushRow(row.split(delim));\r\n\t\t\t\t\tif (preview && i >= preview)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata = data.slice(0, preview);\r\n\t\t\t\t\t\treturn returnable(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn returnable();\r\n\t\t\t}\r\n\r\n\t\t\tvar nextDelim = input.indexOf(delim, cursor);\r\n\t\t\tvar nextNewline = input.indexOf(newline, cursor);\r\n\t\t\tvar quoteCharRegex = new RegExp(escapeRegExp(escapeChar) + escapeRegExp(quoteChar), 'g');\r\n\t\t\tvar quoteSearch = input.indexOf(quoteChar, cursor);\r\n\r\n\t\t\t// Parser loop\r\n\t\t\tfor (;;)\r\n\t\t\t{\r\n\t\t\t\t// Field has opening quote\r\n\t\t\t\tif (input[cursor] === quoteChar)\r\n\t\t\t\t{\r\n\t\t\t\t\t// Start our search for the closing quote where the cursor is\r\n\t\t\t\t\tquoteSearch = cursor;\r\n\r\n\t\t\t\t\t// Skip the opening quote\r\n\t\t\t\t\tcursor++;\r\n\r\n\t\t\t\t\tfor (;;)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Find closing quote\r\n\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\r\n\r\n\t\t\t\t\t\t//No other quotes are found - no other delimiters\r\n\t\t\t\t\t\tif (quoteSearch === -1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (!ignoreLastRow) {\r\n\t\t\t\t\t\t\t\t// No closing quote... what a pity\r\n\t\t\t\t\t\t\t\terrors.push({\r\n\t\t\t\t\t\t\t\t\ttype: 'Quotes',\r\n\t\t\t\t\t\t\t\t\tcode: 'MissingQuotes',\r\n\t\t\t\t\t\t\t\t\tmessage: 'Quoted field unterminated',\r\n\t\t\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\r\n\t\t\t\t\t\t\t\t\tindex: cursor\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn finish();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Closing quote at EOF\r\n\t\t\t\t\t\tif (quoteSearch === inputLen - 1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvar value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);\r\n\t\t\t\t\t\t\treturn finish(value);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// If this quote is escaped, it's part of the data; skip it\r\n\t\t\t\t\t\t// If the quote character is the escape character, then check if the next character is the escape character\r\n\t\t\t\t\t\tif (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tquoteSearch++;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// If the quote character is not the escape character, then check if the previous character was the escape character\r\n\t\t\t\t\t\tif (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(nextDelim !== -1 && nextDelim < (quoteSearch + 1)) {\r\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, (quoteSearch + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(nextNewline !== -1 && nextNewline < (quoteSearch + 1)) {\r\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, (quoteSearch + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Check up to nextDelim or nextNewline, whichever is closest\r\n\t\t\t\t\t\tvar checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);\r\n\t\t\t\t\t\tvar spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);\r\n\r\n\t\t\t\t\t\t// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'\r\n\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\r\n\t\t\t\t\t\t\tcursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;\r\n\r\n\t\t\t\t\t\t\t// If char after following delimiter is not quoteChar, we find next quote char position\r\n\t\t\t\t\t\t\tif (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen] !== quoteChar)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\r\n\t\t\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);\r\n\r\n\t\t\t\t\t\t// Closing quote followed by newline or 'unnecessary spaces + newLine'\r\n\t\t\t\t\t\tif (input.substring(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen) === newline)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\trow.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));\r\n\t\t\t\t\t\t\tsaveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);\r\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\t// because we may have skipped the nextDelim in the quoted field\r\n\t\t\t\t\t\t\tquoteSearch = input.indexOf(quoteChar, cursor);\t// we search for first quote in next line\r\n\r\n\t\t\t\t\t\t\tif (stepIsFunction)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdoStep();\r\n\t\t\t\t\t\t\t\tif (aborted)\r\n\t\t\t\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (preview && data.length >= preview)\r\n\t\t\t\t\t\t\t\treturn returnable(true);\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string\r\n\t\t\t\t\t\terrors.push({\r\n\t\t\t\t\t\t\ttype: 'Quotes',\r\n\t\t\t\t\t\t\tcode: 'InvalidQuotes',\r\n\t\t\t\t\t\t\tmessage: 'Trailing quote on quoted field is malformed',\r\n\t\t\t\t\t\t\trow: data.length,\t// row has yet to be inserted\r\n\t\t\t\t\t\t\tindex: cursor\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tquoteSearch++;\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Comment found at start of new line\r\n\t\t\t\tif (comments && row.length === 0 && input.substring(cursor, cursor + commentsLen) === comments)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (nextNewline === -1)\t// Comment ends at EOF\r\n\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\tcursor = nextNewline + newlineLen;\r\n\t\t\t\t\tnextNewline = input.indexOf(newline, cursor);\r\n\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Next delimiter comes before next newline, so we've reached end of field\r\n\t\t\t\tif (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))\r\n\t\t\t\t{\r\n\t\t\t\t\t// we check, if we have quotes, because delimiter char may be part of field enclosed in quotes\r\n\t\t\t\t\tif (quoteSearch > nextDelim) {\r\n\t\t\t\t\t\t// we have quotes, so we try to find the next delimiter not enclosed in quotes and also next starting quote char\r\n\t\t\t\t\t\tvar nextDelimObj = getNextUnquotedDelimiter(nextDelim, quoteSearch, nextNewline);\r\n\r\n\t\t\t\t\t\t// if we have next delimiter char which is not enclosed in quotes\r\n\t\t\t\t\t\tif (nextDelimObj && typeof nextDelimObj.nextDelim !== 'undefined') {\r\n\t\t\t\t\t\t\tnextDelim = nextDelimObj.nextDelim;\r\n\t\t\t\t\t\t\tquoteSearch = nextDelimObj.quoteSearch;\r\n\t\t\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\r\n\t\t\t\t\t\t\tcursor = nextDelim + delimLen;\r\n\t\t\t\t\t\t\t// we look for next delimiter char\r\n\t\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow.push(input.substring(cursor, nextDelim));\r\n\t\t\t\t\t\tcursor = nextDelim + delimLen;\r\n\t\t\t\t\t\tnextDelim = input.indexOf(delim, cursor);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// End of row\r\n\t\t\t\tif (nextNewline !== -1)\r\n\t\t\t\t{\r\n\t\t\t\t\trow.push(input.substring(cursor, nextNewline));\r\n\t\t\t\t\tsaveRow(nextNewline + newlineLen);\r\n\r\n\t\t\t\t\tif (stepIsFunction)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdoStep();\r\n\t\t\t\t\t\tif (aborted)\r\n\t\t\t\t\t\t\treturn returnable();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (preview && data.length >= preview)\r\n\t\t\t\t\t\treturn returnable(true);\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn finish();\r\n\r\n\r\n\t\t\tfunction pushRow(row)\r\n\t\t\t{\r\n\t\t\t\tdata.push(row);\r\n\t\t\t\tlastCursor = cursor;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n             * checks if there are extra spaces after closing quote and given index without any text\r\n             * if Yes, returns the number of spaces\r\n             */\r\n\t\t\tfunction extraSpaces(index) {\r\n\t\t\t\tvar spaceLength = 0;\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tvar textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);\r\n\t\t\t\t\tif (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {\r\n\t\t\t\t\t\tspaceLength = textBetweenClosingQuoteAndIndex.length;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn spaceLength;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Appends the remaining input from cursor to the end into\r\n\t\t\t * row, saves the row, calls step, and returns the results.\r\n\t\t\t */\r\n\t\t\tfunction finish(value)\r\n\t\t\t{\r\n\t\t\t\tif (ignoreLastRow)\r\n\t\t\t\t\treturn returnable();\r\n\t\t\t\tif (typeof value === 'undefined')\r\n\t\t\t\t\tvalue = input.substring(cursor);\r\n\t\t\t\trow.push(value);\r\n\t\t\t\tcursor = inputLen;\t// important in case parsing is paused\r\n\t\t\t\tpushRow(row);\r\n\t\t\t\tif (stepIsFunction)\r\n\t\t\t\t\tdoStep();\r\n\t\t\t\treturn returnable();\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Appends the current row to the results. It sets the cursor\r\n\t\t\t * to newCursor and finds the nextNewline. The caller should\r\n\t\t\t * take care to execute user's step function and check for\r\n\t\t\t * preview and end parsing if necessary.\r\n\t\t\t */\r\n\t\t\tfunction saveRow(newCursor)\r\n\t\t\t{\r\n\t\t\t\tcursor = newCursor;\r\n\t\t\t\tpushRow(row);\r\n\t\t\t\trow = [];\r\n\t\t\t\tnextNewline = input.indexOf(newline, cursor);\r\n\t\t\t}\r\n\r\n\t\t\t/** Returns an object with the results, errors, and meta. */\r\n\t\t\tfunction returnable(stopped)\r\n\t\t\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\terrors: errors,\r\n\t\t\t\t\tmeta: {\r\n\t\t\t\t\t\tdelimiter: delim,\r\n\t\t\t\t\t\tlinebreak: newline,\r\n\t\t\t\t\t\taborted: aborted,\r\n\t\t\t\t\t\ttruncated: !!stopped,\r\n\t\t\t\t\t\tcursor: lastCursor + (baseIndex || 0)\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t/** Executes the user's step function and resets data & errors. */\r\n\t\t\tfunction doStep()\r\n\t\t\t{\r\n\t\t\t\tstep(returnable());\r\n\t\t\t\tdata = [];\r\n\t\t\t\terrors = [];\r\n\t\t\t}\r\n\r\n\t\t\t/** Gets the delimiter character, which is not inside the quoted field */\r\n\t\t\tfunction getNextUnquotedDelimiter(nextDelim, quoteSearch, newLine) {\r\n\t\t\t\tvar result = {\r\n\t\t\t\t\tnextDelim: undefined,\r\n\t\t\t\t\tquoteSearch: undefined\r\n\t\t\t\t};\r\n\t\t\t\t// get the next closing quote character\r\n\t\t\t\tvar nextQuoteSearch = input.indexOf(quoteChar, quoteSearch + 1);\r\n\r\n\t\t\t\t// if next delimiter is part of a field enclosed in quotes\r\n\t\t\t\tif (nextDelim > quoteSearch && nextDelim < nextQuoteSearch && (nextQuoteSearch < newLine || newLine === -1)) {\r\n\t\t\t\t\t// get the next delimiter character after this one\r\n\t\t\t\t\tvar nextNextDelim = input.indexOf(delim, nextQuoteSearch);\r\n\r\n\t\t\t\t\t// if there is no next delimiter, return default result\r\n\t\t\t\t\tif (nextNextDelim === -1) {\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// find the next opening quote char position\r\n\t\t\t\t\tif (nextNextDelim > nextQuoteSearch) {\r\n\t\t\t\t\t\tnextQuoteSearch = input.indexOf(quoteChar, nextQuoteSearch + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// try to get the next delimiter position\r\n\t\t\t\t\tresult = getNextUnquotedDelimiter(nextNextDelim, nextQuoteSearch, newLine);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult = {\r\n\t\t\t\t\t\tnextDelim: nextDelim,\r\n\t\t\t\t\t\tquoteSearch: quoteSearch\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/** Sets the abort flag */\r\n\t\tthis.abort = function()\r\n\t\t{\r\n\t\t\taborted = true;\r\n\t\t};\r\n\r\n\t\t/** Gets the cursor position */\r\n\t\tthis.getCharIndex = function()\r\n\t\t{\r\n\t\t\treturn cursor;\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tfunction newWorker()\r\n\t{\r\n\t\tif (!Papa.WORKERS_SUPPORTED)\r\n\t\t\treturn false;\r\n\r\n\t\tvar workerUrl = getWorkerBlob();\r\n\t\tvar w = new global.Worker(workerUrl);\r\n\t\tw.onmessage = mainThreadReceivedMessage;\r\n\t\tw.id = workerIdCounter++;\r\n\t\tworkers[w.id] = w;\r\n\t\treturn w;\r\n\t}\r\n\r\n\t/** Callback when main thread receives a message */\r\n\tfunction mainThreadReceivedMessage(e)\r\n\t{\r\n\t\tvar msg = e.data;\r\n\t\tvar worker = workers[msg.workerId];\r\n\t\tvar aborted = false;\r\n\r\n\t\tif (msg.error)\r\n\t\t\tworker.userError(msg.error, msg.file);\r\n\t\telse if (msg.results && msg.results.data)\r\n\t\t{\r\n\t\t\tvar abort = function() {\r\n\t\t\t\taborted = true;\r\n\t\t\t\tcompleteWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });\r\n\t\t\t};\r\n\r\n\t\t\tvar handle = {\r\n\t\t\t\tabort: abort,\r\n\t\t\t\tpause: notImplemented,\r\n\t\t\t\tresume: notImplemented\r\n\t\t\t};\r\n\r\n\t\t\tif (isFunction(worker.userStep))\r\n\t\t\t{\r\n\t\t\t\tfor (var i = 0; i < msg.results.data.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tworker.userStep({\r\n\t\t\t\t\t\tdata: msg.results.data[i],\r\n\t\t\t\t\t\terrors: msg.results.errors,\r\n\t\t\t\t\t\tmeta: msg.results.meta\r\n\t\t\t\t\t}, handle);\r\n\t\t\t\t\tif (aborted)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tdelete msg.results;\t// free memory ASAP\r\n\t\t\t}\r\n\t\t\telse if (isFunction(worker.userChunk))\r\n\t\t\t{\r\n\t\t\t\tworker.userChunk(msg.results, handle, msg.file);\r\n\t\t\t\tdelete msg.results;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (msg.finished && !aborted)\r\n\t\t\tcompleteWorker(msg.workerId, msg.results);\r\n\t}\r\n\r\n\tfunction completeWorker(workerId, results) {\r\n\t\tvar worker = workers[workerId];\r\n\t\tif (isFunction(worker.userComplete))\r\n\t\t\tworker.userComplete(results);\r\n\t\tworker.terminate();\r\n\t\tdelete workers[workerId];\r\n\t}\r\n\r\n\tfunction notImplemented() {\r\n\t\tthrow new Error('Not implemented.');\r\n\t}\r\n\r\n\t/** Callback when worker thread receives a message */\r\n\tfunction workerThreadReceivedMessage(e)\r\n\t{\r\n\t\tvar msg = e.data;\r\n\r\n\t\tif (typeof Papa.WORKER_ID === 'undefined' && msg)\r\n\t\t\tPapa.WORKER_ID = msg.workerId;\r\n\r\n\t\tif (typeof msg.input === 'string')\r\n\t\t{\r\n\t\t\tglobal.postMessage({\r\n\t\t\t\tworkerId: Papa.WORKER_ID,\r\n\t\t\t\tresults: Papa.parse(msg.input, msg.config),\r\n\t\t\t\tfinished: true\r\n\t\t\t});\r\n\t\t}\r\n\t\telse if ((global.File && msg.input instanceof File) || msg.input instanceof Object)\t// thank you, Safari (see issue #106)\r\n\t\t{\r\n\t\t\tvar results = Papa.parse(msg.input, msg.config);\r\n\t\t\tif (results)\r\n\t\t\t\tglobal.postMessage({\r\n\t\t\t\t\tworkerId: Papa.WORKER_ID,\r\n\t\t\t\t\tresults: results,\r\n\t\t\t\t\tfinished: true\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/** Makes a deep copy of an array or object (mostly) */\r\n\tfunction copy(obj)\r\n\t{\r\n\t\tif (typeof obj !== 'object' || obj === null)\r\n\t\t\treturn obj;\r\n\t\tvar cpy = Array.isArray(obj) ? [] : {};\r\n\t\tfor (var key in obj)\r\n\t\t\tcpy[key] = copy(obj[key]);\r\n\t\treturn cpy;\r\n\t}\r\n\r\n\tfunction bindFunction(f, self)\r\n\t{\r\n\t\treturn function() { f.apply(self, arguments); };\r\n\t}\r\n\r\n\tfunction isFunction(func)\r\n\t{\r\n\t\treturn typeof func === 'function';\r\n\t}\r\n\r\n\treturn Papa;\r\n}));\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const SelectorCuatrimestre = ({cuatrimestres, cuatrimestreSeleccionado, materiaSeleccionada}) => {\r\n    const history = useHistory(); \r\n    const handleChange = (event) => {\r\n        let materiaARedireccionar = (materiaSeleccionada === undefined) ? '' : materiaSeleccionada;\r\n        history.push(`/${encodeURIComponent(event.target.value)}/${encodeURIComponent(materiaARedireccionar)}`)\r\n    }\r\n    return (\r\n        <select className=\"form-control\" value={cuatrimestreSeleccionado} onChange={handleChange}>\r\n            <option value=\"\" >Elegir cuatrimestre</option>\r\n            {cuatrimestres.map(cuat =>\r\n            <option key={cuat.id} value={cuat.id}>{cuat.nombre}</option>)}\r\n        </select>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport const SelectorMateria = ({materias, materiaSeleccionada, cuatrimestreSeleccionado}) => {\r\n    const history = useHistory(); \r\n    const handleChange = (event) => {\r\n        history.push(`/${encodeURIComponent(cuatrimestreSeleccionado)}/${encodeURIComponent(event.target.value)}`)\r\n    }\r\n    if ((!materias) || (materias.length === 0)) {\r\n        return (<div />);\r\n    }\r\n    return (\r\n        <select className=\"form-control\" onChange={handleChange} value={materiaSeleccionada}>\r\n            <option value=\"\" >Elegir materia</option>\r\n            {materias.map(mat =>\r\n                <option key={mat} value={mat}>{mat}</option>)}\r\n        </select>\r\n  );\r\n}\r\n","import * as Papa from './papaparse'\r\n/**\r\n * Todos los posibles valores de texto y su correspondiente valor numerico\r\n */\r\nconst TEXTOANUM = {\r\n    \"excelentes\": 5, \"excelente\": 5, \"muy fácil\": 5, \"muy facil\": 5, \"muy interesantes\": 5,\r\n    \"muy buenas\":4, \"muy bueno\": 4, \"fácil\": 4, \"facil\": 4,\r\n    \"buenas\": 3, \"bueno\": 3, \"normal\": 3, \"interesantes\": 3,\r\n    \"regulares\": 2, \"regular\": 2, \"dificil\": 2, \"difícil\": 2, \"poco interesantes\": 2,\r\n    \"malas\": 1, \"malo\": 1, \"muy difícil\": 1, \"muy dificil\": 1, \"nada interesantes\": 1,\r\n    \"no hay tp\": 0, \"no hay clases prácticas\": 0, \"no hay clases teóricas\": 0, \r\n    \"no hay clase teóricas\":0\r\n}\r\n\r\nexport class CsvParser {\r\n    constructor(csv) {\r\n      this.csv = csv;\r\n    }\r\n\r\n    /**\r\n     * Saca (o intenta sacar, bah) la materia, el curso y el docente de la linea\r\n     * @param  {string} cursoEnCSV - El string con como vienen esos 3 valores en los CSV\r\n     * @return array [materia, curso, docente] con lo mejor que pudo hacer en base a un string sin estructura\r\n     */\r\n    obtenerMateriaCursoYDocente(cursoEnCSV) {\r\n        if (cursoEnCSV === \"\") return [null,null,null];\r\n        // En general viene separado por guiones\r\n        var materiaCompleta = cursoEnCSV.split(\"-\");\r\n        if (materiaCompleta.length < 2) {\r\n            // Si no, roguemos que venga separado por coma\r\n            materiaCompleta = cursoEnCSV.split(\",\");\r\n            // Si son exactamente dos cosas, el formato es materia, docente\r\n            if (materiaCompleta.length === 2) {\r\n                return [materiaCompleta[0].trim(),\"\",materiaCompleta[1].trim()]\r\n            }\r\n            console.log(\"Imposible parsear curso y docente\", cursoEnCSV);\r\n            return [\"Error\",\"Error\",\"Error\"];\r\n        }\r\n        // Hay un caso particular que es una materia sin docente\r\n        if ((materiaCompleta.length === 2) && (materiaCompleta[0].length === 5)) {\r\n            return [materiaCompleta.join(\"-\").trim(),\"\",\"Sin docente\"]\r\n        }\r\n        // El docente es lo ultimo de todo\r\n        const docente = materiaCompleta.pop().trim();\r\n        // sacar el curso si lo tiene. Es a veces un numero, a veces \"N y N\"\r\n        let curso = \"\";\r\n        if (materiaCompleta.length > 1) {\r\n            let posibleCurso = materiaCompleta[materiaCompleta.length - 1].trim();\r\n            if ((posibleCurso.length > 0) && (!isNaN(posibleCurso.charAt(0)))) {\r\n                curso = materiaCompleta.pop().trim();\r\n            }\r\n        }\r\n        const materia = materiaCompleta.join(\"-\").trim();\r\n        return [materia, curso, docente]\r\n    }\r\n    /**\r\n     * Convierte un texto a valor numerico de 1 a 5 (o 0 si no aplica)\r\n     * @param  {string} texto - El texto a convertir\r\n     * @return 0 si no aplica, 1 a 5 dependiendo del texto, configurado en TEXTOANUM\r\n     */\r\n    textoANum(texto) {\r\n        texto = texto.trim().toLowerCase();\r\n        if (texto in TEXTOANUM) {\r\n            return TEXTOANUM[texto];\r\n        }\r\n        if (texto !== \"\") console.log(\"Imposible pasar a texto:\", texto);\r\n        return 0;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Devuelve un objeto con la clave y el texto, mas otra entrada para el valor numerico del texto\r\n     * @param  {string} clave - La clave que se debe agregar\r\n     * @param  {string} texto - El texto \r\n     * @return {object} - Un objeto {clave:texto, claveNum: texto pasado a numerico}\r\n     */\r\n    textoYDescripcion(clave,texto) {\r\n        let retObj = {};\r\n        retObj[clave] = texto;\r\n        retObj[clave + 'Num'] = this.textoANum(texto);\r\n        return retObj;\r\n    }\r\n\r\n    \r\n    /**\r\n     * Metodo principal: En base a una linea del csv, mapea a array asociativo\r\n     * @param  {} item\r\n     */\r\n    mapLines(lineaCsv) {\r\n        return lineaCsv;\r\n    }\r\n    /**\r\n     * Parsea el CSV y devuelve las materias y las encuestas\r\n     * @return {array} Primero la lista de materias distintas y luego los datos de encuestas\r\n     */\r\n    parsear() {\r\n        const csvLines = Papa.parse(this.csv, {\r\n            header:true , skipEmptyLines: true\r\n            , transformHeader: function(h,i) { return \"\" + i; } // quiero los headers numericos\r\n        }).data;\r\n\r\n        const datosEncuestas = csvLines.map(this.mapLines);\r\n\r\n        const materias = [...new Set(datosEncuestas.map(item => item.materia))].sort();\r\n        return [materias, datosEncuestas];\r\n    }\r\n\r\n\r\n  }","import { CsvParser } from './CsvParser';\r\nexport class CsvParserPrePandeima extends CsvParser {\r\n\r\n  constructor(csv) {\r\n    super(csv);\r\n    // Gracias javascript por la magia\r\n    this.mapLines = this.mapLines.bind(this)\r\n  }\r\n\r\n  obtenerColumnas() {\r\n    return [\r\n      {name:\"docente\", title:\"Docente\", shortTitle:\"Docente\"},\r\n      {name:\"general\", title:\"General\", shortTitle:\"GEN\", numeric:true },\r\n      {name:\"temas\", title:\"Temas\", shortTitle:\"TEM\", numeric:true },\r\n      {name:\"teoricas\", title:\"Teóricas\", shortTitle:\"TEO\", numeric:true },\r\n      {name:\"practicas\", title:\"Prácticas\", shortTitle:\"PRA\", numeric:true },\r\n      {name:\"dificultadCurso\", title:\"Dificultad\", shortTitle:\"DIF\", numeric:true },\r\n      {name:\"dificultadTP\", title:\"Dif. TP\", shortTitle:\"DIFTP\", numeric:true },\r\n      {name:\"aprobo\", title:\"¿Aprobo?\", shortTitle:\"APR\", centered:true},\r\n      {name:\"temasActualizados\", title:\"¿Actualizada?\", shortTitle:\"ACT\", centered:true},\r\n      {name:\"comentarios\", title:\"Comentarios\", shortTitle:\"CMT\", longText:true},\r\n    ];\r\n  }\r\n\r\n  mapLines(item) {\r\n    const [materia, curso, docente] = this.obtenerMateriaCursoYDocente(item[1]);\r\n    return {\r\n      \"docente\": docente,\r\n      \"curso\": curso,\r\n      \"materia\": materia,\r\n      ...this.textoYDescripcion(\"general\",item[2]),\r\n      ...this.textoYDescripcion(\"temas\",item[4]),\r\n      ...this.textoYDescripcion(\"teoricas\",item[6]),\r\n      ...this.textoYDescripcion(\"practicas\",item[7]),\r\n      ...this.textoYDescripcion(\"dificultadCurso\",item[8]),\r\n      ...this.textoYDescripcion(\"dificultadTP\",item[9]),\r\n      \"aprobo\": item[3],\r\n      \"temasActualizados\": item[5],\r\n      \"comentarios\": item[10],\r\n\r\n    };\r\n  }  \r\n}","import { CsvParser } from './CsvParser';\r\nexport class CsvParser20201C extends CsvParser {\r\n\r\n  obtenerColumnas() {\r\n    return [\r\n      {name:\"docente\", title:\"Docente\", shortTitle:\"Docente\"},\r\n      {name:\"general\", title:\"General\", shortTitle:\"GEN\", numeric:true },\r\n      {name:\"temas\", title:\"Temas\", shortTitle:\"TEM\", numeric:true },\r\n      {name:\"teoricas\", title:\"Teóricas\", shortTitle:\"TEO\", numeric:true },\r\n      {name:\"practicas\", title:\"Prácticas\", shortTitle:\"PRA\", numeric:true },\r\n      {name:\"dificultadCurso\", title:\"Dificultad\", shortTitle:\"DIF\", numeric:true },\r\n      {name:\"dificultadTP\", title:\"Dif. TP\", shortTitle:\"DIFTP\", numeric:true },\r\n      {name:\"aprobo\", title:\"¿Aprobo?\", shortTitle:\"APR\", centered:true},\r\n      {name:\"temasActualizados\", title:\"¿Actualizada?\", shortTitle:\"ACT\", centered:true},\r\n      {name:\"comentarios\", title:\"Comentarios\", shortTitle:\"CMT\", longText:true},\r\n      {name:\"cmtvirtual\", title:\"Virtualidad\", shortTitle:\"VIR\", longText:true},\r\n    ];\r\n  }\r\n\r\n  mapLines = (item) => {\r\n    const [materia, curso, docente] = this.obtenerMateriaCursoYDocente(item[1]);\r\n    return {\r\n      \"docente\": docente,\r\n      \"curso\": curso,\r\n      \"materia\": materia,\r\n      ...this.textoYDescripcion(\"general\",item[2]),\r\n      ...this.textoYDescripcion(\"temas\",item[4]),\r\n      ...this.textoYDescripcion(\"teoricas\",item[6]),\r\n      ...this.textoYDescripcion(\"practicas\",item[7]),\r\n      ...this.textoYDescripcion(\"dificultadCurso\",item[8]),\r\n      ...this.textoYDescripcion(\"dificultadTP\",item[9]),\r\n      \"aprobo\": item[3],\r\n      \"temasActualizados\": item[5],\r\n      \"comentarios\": item[10],\r\n      \"cmtvirtual\": item[11],\r\n    };\r\n  }  \r\n}","import { CsvParser } from './CsvParser';\r\nexport class CsvParser20202C extends CsvParser {\r\n\r\n  obtenerColumnas() {\r\n    return [\r\n      {name:\"docente\", title:\"Docente\", shortTitle:\"Docente\"},\r\n      {name:\"general\", title:\"General\", shortTitle:\"GEN\", numeric:true },\r\n      {name:\"temas\", title:\"Temas\", shortTitle:\"TEM\", numeric:true },\r\n      {name:\"teoricas\", title:\"Teóricas\", shortTitle:\"TEO\", numeric:true },\r\n      {name:\"practicas\", title:\"Prácticas\", shortTitle:\"PRA\", numeric:true },\r\n      {name:\"dificultadCurso\", title:\"Dificultad\", shortTitle:\"DIF\", numeric:true },\r\n      {name:\"dificultadTP\", title:\"Dif. TP\", shortTitle:\"DIFTP\", numeric:true },\r\n      {name:\"aprobo\", title:\"¿Aprobo?\", shortTitle:\"APR\", centered:true},\r\n      {name:\"temasActualizados\", title:\"¿Actualizada?\", shortTitle:\"ACT\", centered:true},\r\n      {name:\"conformeeval\", title:\"Conforme Eval\", shortTitle:\"CEV\", longText:true},\r\n      {name:\"virtualidad\", title:\"Virtualidad\", shortTitle:\"VIR\", longText:true},\r\n      {name:\"comentarios\", title:\"Comentarios\", shortTitle:\"CMT\", longText:true},\r\n    ];\r\n  }\r\n\r\n  acumularDatosConSeparador(actual, titulo, texto) {\r\n    if (texto === \"\") return actual;\r\n    if (actual !== \"\") actual = actual + \". \";\r\n    return `${actual}[${titulo}] ${texto}`;\r\n  }\r\n\r\n  armarDatosCursadaVirtual({teo, pra, tp, cons, tiempos, altura, pos, neg, hacervirtual}) {\r\n    let ret = \"\";\r\n    ret = this.acumularDatosConSeparador(ret, \"Teórica\", teo);\r\n    ret = this.acumularDatosConSeparador(ret, \"Práctica\", pra);\r\n    ret = this.acumularDatosConSeparador(ret, \"TPs\", tp);\r\n    ret = this.acumularDatosConSeparador(ret, \"Consultas\", cons);\r\n    ret = this.acumularDatosConSeparador(ret, \"Tiempos\", tiempos);\r\n    ret = this.acumularDatosConSeparador(ret, \"¿A la altura?\", altura);\r\n    ret = this.acumularDatosConSeparador(ret, \"Positivos\", pos);\r\n    ret = this.acumularDatosConSeparador(ret, \"Negativos\", neg);\r\n    ret = this.acumularDatosConSeparador(ret, \"¿Al retomar presencialidad hacer virtual?\", hacervirtual);\r\n    return ret;\r\n  }\r\n\r\n\r\n  mapLines = (item) => {\r\n    const [materia, curso, docente] = this.obtenerMateriaCursoYDocente(item[1]);\r\n    return {\r\n      \"docente\": docente,\r\n      \"curso\": curso,\r\n      \"materia\": materia,\r\n      ...this.textoYDescripcion(\"general\",item[2]),\r\n      ...this.textoYDescripcion(\"temas\",item[4]),\r\n      ...this.textoYDescripcion(\"teoricas\",item[6]),\r\n      ...this.textoYDescripcion(\"practicas\",item[7]),\r\n      ...this.textoYDescripcion(\"dificultadCurso\",item[8]),\r\n      ...this.textoYDescripcion(\"dificultadTP\",item[9]),\r\n      \"aprobo\": item[3],\r\n      \"temasActualizados\": item[5],\r\n      \"comentarios\": item[21],\r\n      \"conformeeval\": item[20],\r\n      \"virtualidad\": this.armarDatosCursadaVirtual({\r\n          teo: item[11], pra: item[12], tp:item[13], cons:item[14], tiempos:item[15]\r\n          , altura: item[18], pos: item[16], neg: item[17], hacervirtual:item[19] \r\n        })\r\n    };\r\n  }  \r\n}","import React from \"react\";\r\n\r\n\r\nexport const RespuestasEncuestaHeaderCelda = ({titulo, tituloCorto}) => {\r\n    return (\r\n            <th>\r\n                <div className=\"d-xl-none\">{tituloCorto}</div>\r\n                <div className=\"d-none d-xl-block\">{titulo}</div>\r\n            </th>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {RespuestasEncuestaHeaderCelda} from './RespuestasEncuestaHeaderCelda';\r\n\r\n\r\nexport const RespuestasEncuestaHeader = ({columnas}) => {\r\n    return (\r\n        <thead className=\"thead-dark\">\r\n            <tr>\r\n            {columnas.map(datoCol =>\r\n                <RespuestasEncuestaHeaderCelda key={datoCol.name} \r\n                titulo={datoCol.title} tituloCorto={datoCol.shortTitle}/>\r\n            )}\r\n            </tr>\r\n        </thead>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"./Encuestas\";\r\n\r\n\r\nconst CARACTERES_MOSTRAR_DIRECTO = 10;\r\nexport const RespuestasEncuestaCeldaTextoLargo = ({titulo,valor}) => {\r\n  const { handleLongTextChange} = useContext(Context);\r\n  // Si viene sin nada, va en blanco\r\n  if ((valor === undefined) || (valor === \"\")) {\r\n    return (\r\n      <td className=\"table-info\">&nbsp;</td>\r\n    );\r\n  } \r\n  // si tiene menos de X caracteres, entonces mostrar directamente el valor\r\n  if (valor && valor.length && valor.length < CARACTERES_MOSTRAR_DIRECTO)  {\r\n    return (\r\n      <td className=\"table-info text-center\">{valor}</td>\r\n    );\r\n  }\r\n  // Si no, usar un boton que maneje un modal\r\n  return (\r\n    <td className=\"table-info text-center\">\r\n      <div className=\"d-lg-none\">\r\n        <button type=\"button\" title={titulo} className=\"btn btn-sm btn-danger\"\r\n              data-toggle=\"modal\" data-target=\"#cmtModal\"\r\n              onClick={() => {handleLongTextChange(valor, titulo)} } >\r\n          <span className=\"fa fa-eye\"></span>\r\n        </button>\r\n      </div>\r\n      <div className=\"d-none d-lg-block\">\r\n        <button type=\"button\" title={titulo} className=\"btn btn-sm btn-danger\"\r\n          data-toggle=\"modal\" data-target=\"#cmtModal\"\r\n          onClick={() => {handleLongTextChange(valor, titulo)} }>\r\n          Ver&nbsp;\r\n          <span className=\"fa fa-eye\"></span>\r\n        </button>\r\n      </div>\r\n    </td>\r\n  );\r\n\r\n}\r\n","import React from \"react\";\r\n\r\nexport const RespuestasEncuestaCeldaPuntaje = ({titulo, valor, valorNum}) => {\r\n  const tdClassName = `pje-${ valorNum }`;\r\n  return (\r\n    <td className={tdClassName} title={titulo}>\r\n      <div className=\"d-xl-none text-center\">{valorNum}</div>\r\n      <div className=\"d-none d-xl-block\">{valor}</div>\r\n    </td>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { RespuestasEncuestaCeldaTextoLargo } from './RespuestasEncuestaCeldaTextoLargo';\r\nimport { RespuestasEncuestaCeldaPuntaje } from './RespuestasEncuestaCeldaPuntaje';\r\n\r\nexport const RespuestasEncuestaCelda = ({datoCol, datos}) => {\r\n\r\n  const valor = datos[datoCol.name];\r\n\r\n  // Para celdas numericas, tambien mandar el valor numerico\r\n  if (datoCol.numeric) {\r\n    const valorNum = datos[datoCol.name + 'Num'];\r\n    return (<RespuestasEncuestaCeldaPuntaje \r\n      titulo={datoCol.title} valor={valor} valorNum={valorNum} />);\r\n  }\r\n\r\n  // Las celdas de texto largo tienen su propio componente\r\n  if (datoCol.longText) {\r\n    return (<RespuestasEncuestaCeldaTextoLargo \r\n        titulo={datoCol.title} valor={valor} />);\r\n  }\r\n\r\n  // Si no, estamos en el componente actual. Armar el class y mostrarlo\r\n  let tdClassName = \"table-info\";\r\n  if (datoCol.centered) {\r\n    tdClassName = tdClassName + \" text-center\";\r\n  }\r\n  return (\r\n    <td className={tdClassName} title={datoCol.title}>{valor}</td>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {RespuestasEncuestaCelda} from './RespuestasEncuestaCelda';\r\n\r\nexport const RespuestasEncuestaFilaDatos = ({columnas,datos}) => {\r\n    if (!columnas) return (<div />);\r\n    return (\r\n        <tr>\r\n            {columnas.map(datoCol =>\r\n                    <RespuestasEncuestaCelda key={datoCol.name} \r\n                        datoCol={datoCol} datos={datos}\r\n                        />\r\n                )}\r\n        </tr>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const RespuestasEncuestaCeldaAcumulados = ({datoCol, datos}) => {\r\n\r\n  if (!datoCol.numeric) {\r\n    return (<td >&nbsp;</td>);\r\n  }\r\n  if (datos[datoCol.name] === undefined)\r\n  {\r\n    return (<td >&nbsp;</td>);\r\n  }\r\n  const valor = datos[datoCol.name].toFixed(2);\r\n  const titulo = `Promedio ${datoCol.title}`;\r\n  return (\r\n    <td className=\"table-secondary\" title={titulo}>{valor}</td>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {RespuestasEncuestaCeldaAcumulados} from './RespuestasEncuestaCeldaAcumulados';\r\n\r\nexport const RespuestasEncuestaFilaAcumulados = ({columnas,datos}) => {\r\n    if (!columnas) return (<div />);\r\n    return (\r\n        <tr>\r\n            {columnas.map(datoCol =>\r\n                    <RespuestasEncuestaCeldaAcumulados key={datoCol.name} \r\n                        datoCol={datoCol} datos={datos}\r\n                        />\r\n                )}\r\n        </tr>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {RespuestasEncuestaFilaDatos} from './RespuestasEncuestaFilaDatos';\r\nimport {RespuestasEncuestaFilaAcumulados} from './RespuestasEncuestaFilaAcumulados';\r\n\r\nexport const RespuestasEncuestaFilas = ({columnas,filas,acumuladosPorDocente}) => {\r\n    let filasAMostrar = [];\r\n    const docentes = [...new Set(filas.map(item => item.docente))].sort();\r\n    docentes.forEach((docente) => {\r\n        filasAMostrar = [...filasAMostrar \r\n            , filas.filter(f => f.docente === docente)\r\n                .map((datos, index) =>\r\n                <RespuestasEncuestaFilaDatos \r\n                key={docente + index}\r\n                datos={datos}\r\n                columnas={columnas}\r\n                />)\r\n            , (<RespuestasEncuestaFilaAcumulados \r\n                key={docente + \"Acum\"}\r\n                datos={acumuladosPorDocente[docente]}\r\n                columnas={columnas}\r\n                />)\r\n            ];\r\n    });\r\n\r\n    return (\r\n        <tbody>\r\n            {filasAMostrar}\r\n        </tbody>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { RespuestasEncuestaHeader } from './RespuestasEncuestaHeader';\r\nimport { RespuestasEncuestaFilas } from './RespuestasEncuestaFilas';\r\n\r\nexport const RespuestasEncuesta = ({columnas, datosEncuestas,acumuladosPorDocente}) => {\r\n    if ((!datosEncuestas) || (datosEncuestas.length === 0)) {\r\n        return (<div />);\r\n    }\r\n    return (\r\n        <div className=\"table-responsive\">\r\n            <table className=\"ng-hide table table-bordered table-sm\">\r\n                <RespuestasEncuestaHeader \r\n                    columnas={columnas}/>\r\n                <RespuestasEncuestaFilas \r\n                    filas={datosEncuestas} \r\n                    acumuladosPorDocente={acumuladosPorDocente}\r\n                    columnas={columnas}/>\r\n            </table>\r\n        </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const RespuestasPopupTextoLargo = ({titulo, texto}) => {\r\n  return (\r\n    <div id=\"cmtModal\" className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\"\r\n    aria-labelledby=\"cmtModalTitle\" aria-hidden=\"true\">\r\n    <div className=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h4 className=\"modal-title\" id=\"cmtModalTitle\">{titulo}</h4>\r\n          <button type=\"button\" className=\"close\" data-dismiss=\"modal\">&times;</button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <p className=\"mh-25\">{texto}</p>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button type=\"button\" className=\"btn btn-secondary btn-sm ml-auto\"\r\n            data-dismiss=\"modal\">Cerrar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n","const acumularPuntaje = (acumulados, columna, valor) => {\r\n    if (valor === 0) return acumulados;\r\n    if (! (columna in acumulados)) {\r\n        acumulados[columna] = {count:  0, sum: 0}\r\n    }\r\n    acumulados[columna]['count']++;\r\n    acumulados[columna]['sum']+= valor;\r\n    return acumulados;\r\n}\r\n\r\nconst generarPromedios = (docente, acumulados) => {\r\n    if (docente === null) return {};\r\n    let promedios = {};\r\n    Object.keys(acumulados).forEach((k) => {\r\n        if (acumulados[k]['count'] === 0) return;\r\n        promedios[k] = acumulados[k]['sum'] / acumulados[k]['count'];\r\n    });\r\n    let ret = {};\r\n    ret[docente] = promedios;\r\n    return ret;\r\n}\r\n\r\nconst generarAcumuladosDeDocente = (datosEncuestas, docente, columnasNumericas) => {\r\n    let acumulados = {};\r\n    datosEncuestas.filter(de => de.docente === docente)\r\n        .forEach((de) => {\r\n        columnasNumericas.forEach(cn => {\r\n            acumulados = acumularPuntaje( acumulados, cn, de[cn + 'Num'] );\r\n        });\r\n    });\r\n    return acumulados\r\n}\r\n\r\nconst generarAcumulados = (datosEncuestas, datosColumnas) => {\r\n    const columnasNumericas = datosColumnas.filter(dc => dc.numeric).map(dc => dc.name);\r\n    const docentes = [...new Set(datosEncuestas.map(de => de.docente))].sort();\r\n    let promediosDeDocente = {};\r\n    docentes.forEach((docente) => {\r\n        const acumulados = generarAcumuladosDeDocente(datosEncuestas, docente, columnasNumericas);\r\n        promediosDeDocente = {...promediosDeDocente, ...generarPromedios(docente, acumulados)};        \r\n    });\r\n    return promediosDeDocente;\r\n}\r\n\r\nexport const EncuestasDeMateria = (datosEncuestas, materia, datosColumnas) => {\r\n    if (datosColumnas.length === 0) return {encuestasDeMateria:[], acumulados:{}};\r\n    const encuestasDeMateria = datosEncuestas.filter( \r\n        de => ( (materia !== null) && (materia !== \"\") \r\n            && (de.materia === materia)));\r\n    encuestasDeMateria.sort((a, b) => a.docente.localeCompare(b.docente));\r\n    const acumulados = generarAcumulados(encuestasDeMateria,datosColumnas);\r\n    return {encuestasDeMateria, acumulados};\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { SelectorCuatrimestre } from './SelectorCuatrimestre';\r\nimport { SelectorMateria } from './SelectorMateria';\r\nimport { GetCsvParser } from '../csvparse/GetCsvParser';\r\nimport { RespuestasEncuesta } from './RespuestasEncuesta';\r\nimport { RespuestasPopupTextoLargo } from './RespuestasPopupTextoLargo';\r\nimport { EncuestasDeMateria } from '../services/EncuestasDeMateria';\r\nimport { useParams } from \"react-router-dom\";\r\n  \r\nexport const Context = React.createContext();\r\n\r\nfunction Encuestas() {\r\n    // Vienen de la URL\r\n    const { cuatrimestre: cuatrimestreURL, materia: materiaURL} = useParams();\r\n    const cuatrimestreSeleccionado = decodeURIComponent(cuatrimestreURL);\r\n    const materiaSeleccionada = decodeURIComponent(materiaURL);\r\n    // States\r\n    const [cuatrimestres, setCuatrimestres] = useState([]);\r\n    const [materias, setMaterias] = useState([]);\r\n    const [datosEncuestas, setDatosEncuestas] = useState([]);\r\n    const [columnasDatosEncuestas, setColumnasDatosEncuestas] = useState([]);\r\n\r\n    const [datosEncuestasDeMateria, setDatosEncuestasDeMateria] = useState({encuestasDeMateria: [], acumulados:{}});\r\n    const [textoLargo, setTextoLargo] = useState(\"\");\r\n    const [tituloTextoLargo, setTituloTextoLargo] = useState(\"\");\r\n\r\n    // Cuando hay que mostrar un texto largo\r\n    const handleLongTextChange = (valor, titulo) => {\r\n        setTextoLargo(valor);\r\n        setTituloTextoLargo(titulo);\r\n    }    \r\n    \r\n    // Inicialmente, cargar la lista de los cuatrimestres que hay\r\n    useEffect(() => {\r\n        axios.get(\"datos/cuatrimestres.json\").then((res) => {\r\n            setCuatrimestres(res.data);\r\n        })\r\n      },[]);\r\n\r\n    // Ante el cambio en cosas de cuatrimestres\r\n    useEffect(() => {\r\n        // Si falta cargar aun los cuatrimestres, esperar a que lo haga (se volvera a llamar la funcion)\r\n        if (cuatrimestres.length === 0) return;\r\n        if (cuatrimestreSeleccionado === undefined) return;\r\n        const datosCuatSel = cuatrimestres.find(cuat => cuat.id === cuatrimestreSeleccionado);\r\n        if (datosCuatSel === undefined) return;\r\n        axios.get(datosCuatSel.url).then((res) => {\r\n            const parser = GetCsvParser(cuatrimestreSeleccionado, res.data);\r\n            const [materias, datosEncuestas] = parser.parsear();\r\n            const columnas = parser.obtenerColumnas();\r\n            setMaterias(materias);\r\n            setDatosEncuestas(datosEncuestas);\r\n            setColumnasDatosEncuestas(columnas);\r\n        })\r\n    }, [cuatrimestres,cuatrimestreSeleccionado]);\r\n\r\n    //Ante el cambio de cosas de materias, cargar sus datos y acumulados\r\n    useEffect( () => {\r\n        if (materiaSeleccionada === \"\") return;\r\n        if (!datosEncuestas) return;\r\n        const datosEncuestasDeMateria = EncuestasDeMateria(datosEncuestas, materiaSeleccionada, columnasDatosEncuestas);\r\n        console.log(\"CARGA LOS DATOS\", datosEncuestasDeMateria);\r\n        setDatosEncuestasDeMateria(datosEncuestasDeMateria);\r\n    }, [datosEncuestas, materiaSeleccionada, columnasDatosEncuestas]);\r\n\r\n    return (\r\n        <Context.Provider\r\n            value={{\r\n                handleLongTextChange\r\n            }}\r\n        >\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h1>Encuestas</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-xl-4 align-self-center\">\r\n                        <SelectorCuatrimestre\r\n                            cuatrimestres={cuatrimestres}\r\n                            cuatrimestreSeleccionado={cuatrimestreSeleccionado}\r\n                            materiaSeleccionada={materiaSeleccionada}\r\n                         />\r\n                    </div>\r\n                    <div className=\"col-12 col-xl-8 align-self-center\">\r\n                        <SelectorMateria \r\n                            materias={materias}\r\n                            cuatrimestreSeleccionado={cuatrimestreSeleccionado}\r\n                            materiaSeleccionada={materiaSeleccionada}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" >\r\n                        <RespuestasPopupTextoLargo \r\n                            titulo={tituloTextoLargo}\r\n                            texto={textoLargo}\r\n                            />\r\n                        <RespuestasEncuesta\r\n                            columnas={columnasDatosEncuestas}\r\n                            datosEncuestas={datosEncuestasDeMateria.encuestasDeMateria}\r\n                            acumuladosPorDocente={datosEncuestasDeMateria.acumulados}\r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </Context.Provider>\r\n  );\r\n}\r\n\r\nexport default Encuestas;\r\n","import {CsvParserPrePandeima} from './CsvParserPrePandemia';\r\nimport {CsvParser20201C} from './CsvParser20201C';\r\nimport {CsvParser20202C} from './CsvParser20202C';\r\n\r\nexport function GetCsvParser(cuat, csv) {\r\n    if (cuat === \"20201C\") return new CsvParser20201C(csv);\r\n    if (cuat === \"20202C\") return new CsvParser20202C(csv);\r\n    return new CsvParserPrePandeima(csv);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Encuestas from './components/Encuestas';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/:cuatrimestre/:materia\">\n          <Encuestas />\n        </Route>\n        <Route path=\"/:cuatrimestre\">\n          <Encuestas />\n        </Route>\n        <Route path=\"/\">\n          <Encuestas />\n        </Route>\n      </Switch>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}